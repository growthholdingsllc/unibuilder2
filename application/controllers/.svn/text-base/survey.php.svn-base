<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Survey extends UNI_Controller {		public function __construct()  {    parent::__construct();		$this->load->model(array('Mod_survey','Mod_user','Mod_saved_search','Mod_notification','Mod_reminder','Mod_message','Mod_template','Mod_login','Mod_role'));	 }/** 	* index 	* 	* @method: index 	* @access: public 	* @param:  	* @return: array 	* @createdby: Gayathri Kalyani	* @URL:  	*/	public function index()	{		$data = array(		'title'        => "SURVEY",				'content'      => 'content/survey/survey',        'page_id'      => 'survey'	,		//'search_session_array' => $this->uni_session_get('SEARCH')					); 		//get survey tags custom fields from general value table		$args =array('classification'=>'survey_tags', 'where_clause' => '("int01" = 0 OR "int01" = '.$this->builder_id.')', 'type'=>'dropdown'); 		$survey_tags_array = $this->Mod_general_value->get_general_value($args);		$data['survey_tags'] = array();		if(isset($survey_tags_array['values']))		{			$data['survey_tags'] = $survey_tags_array['values'];		}				$post_array =  array('UB_SURVEY_TEMPLATE.builder_id'=>$this->user_session['builder_id']);		$template_name = $this->Mod_survey->get_template(array(												'select_fields' => array('UB_SURVEY_TEMPLATE.ub_survey_template_id','UB_SURVEY_TEMPLATE.name'),												'where_clause' => $post_array,												));				// echo'<pre>';print_r($template_name);										if ($template_name['status']==TRUE)			{				$data['template_name']=$this->Mod_survey->build_ci_dropdown_array($template_name['aaData'],'ub_survey_template_id','name');			}				// echo'<pre>';print_r($data['template_name']);exit;						 // get tags from general value table 					$args =array('classification'=>'survey_tags', 'where_clause' => '("int01" = 0 OR "int01" = '.$this->builder_id.')', 'type'=>'dropdown'); 		$survey_tags_array = $this->Mod_general_value->get_general_value($args);		$data['survey_tags'] = array();		if(isset($survey_tags_array['values']))		{			$data['survey_tags'] = $survey_tags_array['values'];		}				 // get alll type of users													if(isset($this->project_id) && !empty($this->project_id))		 {		 $all_type_users = $this->Mod_project->get_project_assigned_users(array('ub_project_id' =>$this->project_id, 'account_type' => 'all', 'dropdown_type' => 'optgroup'));		 }else		 {		 $args = array(BUILDERADMIN => array('builder_id' => $this->builder_id, 'account_type' => BUILDERADMIN), OWNER => array('builder_id' => $this->builder_id, 'account_type' => OWNER), SUBCONTRACTOR => array('builder_id' => $this->builder_id, 'account_type' => SUBCONTRACTOR));		 $all_type_users = $this->Mod_user->get_users_by_type($args,'multiple');		 }		$data['get_all_users'] = $all_type_users;				//apply filter template		$this->module = 'SURVEY_TEMPLATE';		$data['template_search_session_array'] =  $this->uni_session_get('template_search');			$post_array = array('builder_id' => $this->builder_id,							 'user_id' => $this->user_id,							 'module_name' => $this->module		 );		 $result_data = $this->Mod_saved_search->get_saved_search(array(												 'select_fields' => array(),												 'where_clause' => $post_array												 ));		if($result_data['status'] == true)		{			$data['template_apply_filter'] = true;		}		else		{			$data['template_apply_filter'] = false;		}				//apply filter Survey response		$this->module = 'SURVEY_RESPONSE';		$data['response_search_session_array'] =  $this->uni_session_get('response_search');			$post_array = array('builder_id' => $this->builder_id,							 'user_id' => $this->user_id,							 'module_name' => $this->module		 );		 $result_data = $this->Mod_saved_search->get_saved_search(array(												 'select_fields' => array(),												 'where_clause' => $post_array												 ));		if($result_data['status'] == true)		{			$data['response_apply_filter'] = true;		}		else		{			$data['response_apply_filter'] = false;;		}					//apply filter Survey response		$this->module = 'SURVEY_REQUEST';		$data['request_search_session_array'] =  $this->uni_session_get('survey_request_search');			$post_array = array('builder_id' => $this->builder_id,							 'user_id' => $this->user_id,							 'module_name' => $this->module		 );		 $result_data = $this->Mod_saved_search->get_saved_search(array(												 'select_fields' => array(),												 'where_clause' => $post_array												 ));		if($result_data['status'] == true)		{			$data['request_apply_filter'] = true;		}		else		{			$data['request_apply_filter'] = false;;		}				$this->template->view($data);	}	/** To get The List of Templates*/	/** 	* get_template_list	* 	* @method: index 	* @access: public 	* @param:  	* @return: array 	* @createdby: Gayathri Kalyani	* @URL:  	*/	public function get_template_list($page_count = '')	{		$post_array[]  = array(            'field_name' => 'UB_SURVEY_TEMPLATE.builder_id',            'value' => $this->user_session['builder_id'],            'type' => '='        );				 $total_count_array = array();        if (!empty($this->input->post())) {            // Sanitize input            $result = $this->sanitize_input();                        if (TRUE === $result['status']) 			{			// echo'<pre>';print_r($result['data']);exit;			$search_session_array=array();				// echo '<pre>';print_r($result);				if(isset($result['data']['tags']) && $result['data']['tags']!='' && $result['data']['tags'] != 'null')					{					 // echo '<pre>';print_r($result);exit;							$post_array[] = array(								'field_name' => 'UB_SURVEY_TEMPLATE.tags',								'value'=> $result['data']['tags'], 								'type' => '||',								'classification' => 'dynamnic_text'							);						$search_session_array['tags'] = $result['data']['tags'];					}				$this->module = 'SURVEY_TEMPLATE';				if($page_count == 'result_array')				{					if(isset($this->uni_session_get('template_search')['tags']) && $this->uni_session_get('template_search')['tags']!='' && $this->uni_session_get('template_search')['tags'] != 'null')					{					 // echo '<pre>';print_r($result);exit;							$post_array[] = array(								'field_name' => 'UB_SURVEY_TEMPLATE.tags',								'value'=> $this->uni_session_get('template_search')['tags'], 								'type' => '||',								'classification' => 'dynamnic_text'							);						//$search_session_array['tags'] = $result['data']['tags'];					}									}				$search_session_array['iDisplayStart'] = isset($result['data']['iDisplayStart'])?$result['data']['iDisplayStart']:$this->uni_session_get('template_search')['iDisplayStart'];				$search_session_array['iDisplayLength'] = isset($result['data']['iDisplayLength'])?$result['data']['iDisplayLength']:$this->uni_session_get('template_search')['iDisplayLength'];				$this->uni_set_session('template_search', $search_session_array);				// $this->uni_set_session('search', $search_session_array);                $where_str = $this->Mod_survey->build_where($post_array);				                // Pagination Array                $pagination_array = array();                if(isset($this->uni_session_get('template_search')['iDisplayStart']) && isset($this->uni_session_get('template_search')['iDisplayLength']))				{					$pagination_array = array( 'iDisplayStart' => $this->uni_session_get('template_search')['iDisplayStart'],'iDisplayLength' => $this->uni_session_get('template_search')['iDisplayLength'], 'sEcho' => 1);					$total_count_array = $this->Mod_survey->get_template(array(													'select_fields' => array('COUNT(UB_SURVEY_TEMPLATE.ub_survey_template_id) AS total_count'),													'where_clause' => $where_str,													// 'join'=> array('user'=>'Yes','project'=>'Yes','builder'=>'yes')												));				}				else if(isset($result['data']['iDisplayStart']) && isset($result['data']['iDisplayLength']) && isset($result['data']['sEcho']))				{					$pagination_array = array( 'iDisplayStart' => $result['data']['iDisplayStart'],'iDisplayLength' => $result['data']['iDisplayLength'], 'sEcho' => $result['data']['sEcho']);					$total_count_array = $this->Mod_survey->get_template(array(													'select_fields' => array('COUNT(UB_SURVEY_TEMPLATE.ub_survey_template_id) AS total_count'),													'where_clause' => $where_str,													// 'join'=> array('user'=>'Yes','project'=>'Yes','builder'=>'yes')												));				}				/*if(isset($result['data']['iDisplayStart']) && isset($result['data']['iDisplayLength']) && isset($result['data']['sEcho']))					{						$pagination_array = array( 'iDisplayStart' => $result['data']['iDisplayStart'],'iDisplayLength' => $result['data']['iDisplayLength'], 'sEcho' => $result['data']['sEcho']);						// Get number of records						$total_count_array = $this->Mod_survey->get_template(array(													'select_fields' => array('COUNT(UB_SURVEY_TEMPLATE.ub_survey_template_id) AS total_count'),													'where_clause' => $where_str,													// 'join'=> array('user'=>'Yes','project'=>'Yes','builder'=>'yes')												));																		}*/					                // Order by                $order_by_where = '';                if (isset($result['data']['iSortCol_0']) && $result['data']['iSortCol_0'] > 0) {                    // echo $result['data']['iSortCol_0'];                    $sort_type            = $result['data']['sSortDir_0'];                    $sort_filed_column_id = $result['data']['iSortCol_0'];                    $dt_filed_name        = 'mDataProp_';                    //echo $result['data'][$dt_filed_name.$sort_filed_column_id];					                }				else				{				$order_by_where='UB_SURVEY_TEMPLATE.modified_on DESC';				}                            } else 			{                $this->Mod_survey->response($result);            }        }               //$date_array = array('TASK.due_date'=> 'due_date');        $query_array  = array( 'select_fields' => array(                'UB_SURVEY_TEMPLATE.ub_survey_template_id','UB_SURVEY_TEMPLATE.name', 'UB_SURVEY_TEMPLATE.tags', 'USER.first_name as created_by'),				'join' => array('user' => 'Yes' ),				'where_clause' => $where_str,				'order_clause' => $order_by_where,				'pagination' => $pagination_array        );		// echo '<pre>';print_r($query_array);exit;		 $result_data = $this->Mod_survey->get_template($query_array);		 if($page_count == 'result_array')	     {		  //print_r($result_data);exit;		  return $result_data;	     }		  if ($result_data['status'] == FALSE)			 {			$result_data= array();            $result_data['aaData'] = array();        }		else 		{            $result_data['iTotalRecords'] = isset($total_count_array['aaData'][0]['total_count']) ? $total_count_array['aaData'][0]['total_count'] : '';            $result_data['iTotalDisplayRecords'] = isset($total_count_array['aaData'][0]['total_count']) ? $total_count_array['aaData'][0]['total_count'] : '';            $result_data['sEcho'] = isset($result['data']['sEcho']) ? $result['data']['sEcho'] : '';        }				 $this->Mod_survey->response($result_data);			}	/** To get The List of Templates*/	/** 	* get_survey_response_list	* 	* @method: index 	* @access: public 	* @param:  	* @return: array 	* @createdby: Gayathri Kalyani	* @URL:  	*/	public function get_survey_response_list($page_count = '')	{        if (!empty($this->input->post())) 		{            // Sanitize input            $result = $this->sanitize_input();            if (TRUE === $result['status']) 			{				$post_array[]  = array(									'field_name' => 'UB_SURVEY.builder_id',									'value' => $this->user_session['builder_id'],									'type' => '='									);				$search_session_array=array();				if(isset($result['data']['tags']) && $result['data']['tags']!='' && $result['data']['tags'] != 'null')				{					$post_array[] = array(							'field_name' => 'UB_SURVEY.tags',							'value'=> $result['data']['tags'], 							'type' => '||',							'classification' => 'dynamnic_text'						);						$search_session_array['tags'] = $result['data']['tags'];				}				if(isset($result['data']['user_id']) && $result['data']['user_id']!='' && $result['data']['user_id'] != 'null')				{				// echo '<pre>';print_r($result);exit;						$post_array[] = array(							'field_name' => 'UB_SURVEY.assigned_users',							'value'=> $result['data']['user_id'], 							'type' => '||',							'classification' => 'dynamnic_text'						);					$search_session_array['user_id'] = $result['data']['user_id'];				} 									$this->module = 'SURVEY_RESPONSE';				$search_session_array['iDisplayStart'] = isset($result['data']['iDisplayStart'])?$result['data']['iDisplayStart']:$this->uni_session_get('response_search')['iDisplayStart'];				$search_session_array['iDisplayLength'] = isset($result['data']['iDisplayLength'])?$result['data']['iDisplayLength']:$this->uni_session_get('response_search')['iDisplayLength'];				if($page_count == 'result_array')				{					if(isset($this->uni_session_get('response_search')['tags']) && $this->uni_session_get('response_search')['tags']!='' && $this->uni_session_get('response_search')['tags'] != 'null')					{					 // echo '<pre>';print_r($result);exit;							$post_array[] = array(								'field_name' => 'UB_SURVEY.tags',								'value'=> $this->uni_session_get('response_search')['tags'], 								'type' => '||',								'classification' => 'dynamnic_text'							);						//$search_session_array['tags'] = $result['data']['tags'];					}					if(isset($this->uni_session_get('response_search')['user_id']) && $this->uni_session_get('response_search')['user_id']!='' && $this->uni_session_get('response_search')['user_id'] != 'null')				   {				     // echo '<pre>';print_r($result);exit;						$post_array[] = array(							'field_name' => 'UB_SURVEY.assigned_users',							'value'=> $this->uni_session_get('response_search')['user_id'], 							'type' => '||',							'classification' => 'dynamnic_text'						);					//$search_session_array['user_id'] = $result['data']['user_id'];				  } 									}				$this->uni_set_session('response_search', $search_session_array);                               $where_str = $this->Mod_survey->build_where($post_array);				$total_count_array = array();				if(isset($this->uni_session_get('response_search')['iDisplayStart']) && isset($this->uni_session_get('response_search')['iDisplayLength']))				{					$pagination_array = array( 'iDisplayStart' => $this->uni_session_get('response_search')['iDisplayStart'],'iDisplayLength' => $this->uni_session_get('response_search')['iDisplayLength'], 'sEcho' => 1);					$total_count_array = $this->Mod_survey->get_survey(array(												'select_fields' => array('COUNT(UB_SURVEY.ub_survey_id) AS total_count'),												'where_clause' => $where_str,												// 'join'=> array('user'=>'Yes','project'=>'Yes','builder'=>'yes')											));				}				else if(isset($result['data']['iDisplayStart']) && isset($result['data']['iDisplayLength']) && isset($result['data']['sEcho']))				{					$pagination_array = array( 'iDisplayStart' => $result['data']['iDisplayStart'],'iDisplayLength' => $result['data']['iDisplayLength'], 'sEcho' => $result['data']['sEcho']);					$total_count_array = $this->Mod_survey->get_survey(array(												'select_fields' => array('COUNT(UB_SURVEY.ub_survey_id) AS total_count'),												'where_clause' => $where_str,												// 'join'=> array('user'=>'Yes','project'=>'Yes','builder'=>'yes')											));				}                // Pagination Array				/*if(isset($result['data']['iDisplayStart']) && isset($result['data']['iDisplayLength']) && isset($result['data']['sEcho']))				{					$pagination_array = array( 'iDisplayStart' => $result['data']['iDisplayStart'],'iDisplayLength' => $result['data']['iDisplayLength'], 'sEcho' => $result['data']['sEcho']);					// Get number of records					$total_count_array = $this->Mod_survey->get_survey(array(												'select_fields' => array('COUNT(UB_SURVEY.ub_survey_id) AS total_count'),												'where_clause' => $where_str,												// 'join'=> array('user'=>'Yes','project'=>'Yes','builder'=>'yes')											));																}		*/                // Order by                $order_by_where = '';                if (isset($result['data']['iSortCol_0']) && $result['data']['iSortCol_0'] > 0) 				{                    $sort_type            = $result['data']['sSortDir_0'];                    $sort_filed_column_id = $result['data']['iSortCol_0'];                    $dt_filed_name        = 'mDataProp_';	                }				else				{					$order_by_where='UB_SURVEY.modified_on DESC';				}				// 'GROUP_CONCAT(CONCAT_WS(" ",USERS.first_name,USERS.last_name )SEPARATOR ",<br>") AS Released_to',				$date_array = array('UB_SURVEY.released_on'=> 'released_on');				$query_array  = array( 'select_fields' => array(						'UB_SURVEY.name','PROJECT.project_name','UB_SURVEY.released_on','USER.first_name As Released_by',						"IF (LENGTH(UB_SURVEY.assigned_users)= 0,0,(LENGTH(UB_SURVEY.assigned_users) - LENGTH(REPLACE(UB_SURVEY.assigned_users,TRIM(','),''))+1)) AS Released_to",						'UB_SURVEY.status','UB_SURVEY.ub_survey_id,'.$this->Mod_user->format_user_datetime($date_array,"date")),						'join' => array('project' => 'Yes' ,'user' =>'Yes'),						'where_clause' => $where_str,						'order_clause' => $order_by_where,						'pagination' => $pagination_array				);				$result_data = $this->Mod_survey->get_survey($query_array);				if($page_count == 'result_array')	            {		          //print_r($result_data);exit;		          return $result_data;	            }				if ($result_data['status'] == FALSE)				{					$result_data= array();					$result_data['aaData'] = array();				}				else 				{					$result_data['iTotalRecords'] = isset($total_count_array['aaData'][0]['total_count']) ? $total_count_array['aaData'][0]['total_count'] : '';					$result_data['iTotalDisplayRecords'] = isset($total_count_array['aaData'][0]['total_count']) ? $total_count_array['aaData'][0]['total_count'] : '';					$result_data['sEcho'] = isset($result['data']['sEcho']) ? $result['data']['sEcho'] : '';				}				 $this->Mod_survey->response($result_data);              } 			else 			{                $this->Mod_survey->response($result);            }        }		else		{			$result = array();			$result['aaData'] = array();			$result['status'] = FALSE;			$result['message'] = 'Post array is empty';			$this->Mod_survey->response($result);		}	}	/** To get The List of Survey Request*/	 	/*** Get Survey Request list	* 	* @method: get_survey_request_list 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: Gayathri Kalyani 	* @URL:  	*/		public function get_survey_request_list()	{        if (!empty($this->input->post())) {            // Sanitize input            $result = $this->sanitize_input();                        if (TRUE === $result['status']) 			{				$post_array[]  = array(										'field_name' => 'UB_SURVEY.builder_id',										'value' => $this->user_session['builder_id'],										'type' => '='									);				$post_array[]  = array(										'field_name' => 'UB_SURVEY.status',										'value' => 'Released,Closed',										'type' => '||',										'classification' => 'dynamnic_text'									);																		$post_array[]  = array(										'field_name' => 'UB_SURVEY.assigned_users',										'value' => $this->user_id,										'type' => '||',										'classification' => 'dynamnic_text'									);					$search_session_array['status'] = $result['data']['status'];					$this->module = 'SURVEY_REQUEST';				$search_session_array['iDisplayStart'] = isset($result['data']['iDisplayStart'])?$result['data']['iDisplayStart']:$this->uni_session_get('survey_request_search')['iDisplayStart'];				$search_session_array['iDisplayLength'] = isset($result['data']['iDisplayLength'])?$result['data']['iDisplayLength']:$this->uni_session_get('survey_request_search')['iDisplayLength'];				$this->uni_set_session('survey_request_search', $search_session_array);		                $where_str = $this->Mod_survey->build_where($post_array);				                // Pagination Array                if(isset($this->uni_session_get('survey_request_search')['iDisplayStart']) && isset($this->uni_session_get('survey_request_search')['iDisplayLength']))				{					$pagination_array = array( 'iDisplayStart' => $this->uni_session_get('survey_request_search')['iDisplayStart'],'iDisplayLength' => $this->uni_session_get('survey_request_search')['iDisplayLength'], 'sEcho' => 1);					$total_count_array = $this->Mod_survey->get_survey(array(												'select_fields' => array('COUNT(UB_SURVEY.ub_survey_id) AS total_count'),												'where_clause' => $where_str,												// 'join'=> array('user'=>'Yes','project'=>'Yes','builder'=>'yes')											));				}				else if(isset($result['data']['iDisplayStart']) && isset($result['data']['iDisplayLength']) && isset($result['data']['sEcho']))				{					$pagination_array = array( 'iDisplayStart' => $result['data']['iDisplayStart'],'iDisplayLength' => $result['data']['iDisplayLength'], 'sEcho' => $result['data']['sEcho']);					$total_count_array = $this->Mod_survey->get_survey(array(												'select_fields' => array('COUNT(UB_SURVEY.ub_survey_id) AS total_count'),												'where_clause' => $where_str,												// 'join'=> array('user'=>'Yes','project'=>'Yes','builder'=>'yes')											));				}				/*if(isset($result['data']['iDisplayStart']) && isset($result['data']['iDisplayLength']) && isset($result['data']['sEcho']))				{					$pagination_array = array( 'iDisplayStart' => $result['data']['iDisplayStart'],'iDisplayLength' => $result['data']['iDisplayLength'], 'sEcho' => $result['data']['sEcho']);					$total_count_array = array();					// Get number of records					$total_count_array = $this->Mod_survey->get_survey(array(												'select_fields' => array('COUNT(UB_SURVEY.ub_survey_id) AS total_count'),												'where_clause' => $where_str,												// 'join'=> array('user'=>'Yes','project'=>'Yes','builder'=>'yes')											));																}*/                // Order by                $order_by_where = '';                if (isset($result['data']['iSortCol_0']) && $result['data']['iSortCol_0'] > 0) {                    // echo $result['data']['iSortCol_0'];                     $sort_type            = $result['data']['sSortDir_0'];                    $sort_filed_column_id = $result['data']['iSortCol_0'];                    $dt_filed_name        = 'mDataProp_';                 }				 else					{						$order_by_where = 'UB_SURVEY.'.$result['data'][$dt_filed_name.$sort_filed_column_id].' '.$sort_type;					}                            } 			else 			{                $this->Mod_survey->response($result);            }        }		// Fetch date format to display	               $date_array = array('UB_SURVEY.released_on'=> 'released_on');        $query_array  = array( 'select_fields' => array(                'UB_SURVEY.ub_survey_id','UB_SURVEY.name','PROJECT.project_name','UB_SURVEY.released_on','USER.first_name','UB_SURVEY.status,'.$this->Mod_user->format_user_datetime($date_array,"date")),				'join' => array('project' => 'Yes','user' =>'Yes'),				'where_clause' => $where_str,				'order_clause' => $order_by_where,				'pagination' => $pagination_array        );		 $result_data = $this->Mod_survey->get_survey($query_array);		 if ($result_data['status'] == FALSE)			 {			$result_data= array();            $result_data['aaData'] = array();        }		else 		{            $result_data['iTotalRecords'] = isset($total_count_array['aaData'][0]['total_count']) ? $total_count_array['aaData'][0]['total_count'] : '';            $result_data['iTotalDisplayRecords'] = isset($total_count_array['aaData'][0]['total_count']) ? $total_count_array['aaData'][0]['total_count'] : '';            $result_data['sEcho'] = isset($result['data']['sEcho']) ? $result['data']['sEcho'] : '';        }		 $this->Mod_survey->response($result_data);					} /** To Add and update Template */	 	/*** New Template	* 	* @method: new_template 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: Gayathri Kalyani 	* @URL:  	*/				public function new_template($ub_survey_template_id=0)	{		$data = array(		'title'        => "SURVEY",				'content'      => 'content/survey/new_template',        'page_id'      => 'survey',		'survey_template_id' => $ub_survey_template_id						);  				$data['question_response_data']=array();		if($ub_survey_template_id > 0 || null!==$this->input->post('ub_survey_template_id') && $this->input->post('ub_survey_template_id') > 0)		{			if(!empty($this->input->post()))			{				$result = $this->sanitize_input();				// echo'<pre>';print_r($result);exit;				if(!empty($result['data']['tags']))				{					$tags = "".implode(",", $result['data']['tags'])."";				}				else				{					$tags = '';				}				$update_template = array(						'ub_survey_template_id' => $result['data']['ub_survey_template_id'],						'name' => $result['data']['name'],						'tags' => $tags,						'created_by' => $this->user_id,						'notes' => $result['data']['notes'],						'description' => $result['data']['description'],						'modified_on' => TODAY,						'modified_by' =>$this->user_id,						'builder_id' =>$this->builder_id						);						$response = $this->Mod_survey->update_template($update_template);				$question_id = array();				if(isset($result['data']['question_id']) && !empty($result['data']['question_id']))				{					$question_id = explode(",",$result['data']['question_id']);				}				// echo '<pre>';print_r($question_id);				foreach($question_id as $key => $value)				{					$update_data = array();					$update_data['ub_survey_template_question_id'] = $question_id[$key];					$update_data['display_order'] = $key;					// echo '<pre>';print_r($update_data);exit;					$this->Mod_survey->update_template_question($update_data);					}				$this->Mod_survey->response($response);			}			else			{											$result_data = $this->Mod_survey->get_template(array(				'select_fields' => array('UB_SURVEY_TEMPLATE.ub_survey_template_id','UB_SURVEY_TEMPLATE.name','UB_SURVEY_TEMPLATE.tags','UB_SURVEY_TEMPLATE.notes','UB_SURVEY_TEMPLATE.description','USER.first_name as created_by'),				'join' => array('user' => 'Yes' ),				// 'join' => array('survey_template_questions'=> 'Yes'),				'where_clause' => (array('ub_survey_template_id' =>  $ub_survey_template_id))));																// echo'<pre>';print_r($question_data);exit;				if(TRUE === $result_data['status'])				{					$data['template_data']  = $result_data['aaData'][0];				}				$question_data = $this->Mod_survey->get_template_question(array(				'select_fields' => array('UB_SURVEY_TEMPLATE_QUESTIONS.survey_template_id','UB_SURVEY_TEMPLATE_QUESTIONS.ub_survey_template_question_id','UB_SURVEY_TEMPLATE_QUESTIONS.question','UB_SURVEY_TEMPLATE_QUESTIONS.question_column_name','UB_SURVEY_TEMPLATE_QUESTIONS.answer_type','UB_SURVEY_TEMPLATE_QUESTIONS.include_not_applicable'),				'join' => array('survey_template_questions'=> 'Yes'),				'order_clause' => 'UB_SURVEY_TEMPLATE_QUESTIONS.display_order ASC',				'where_clause' => (array('survey_template_id' => $ub_survey_template_id))));								if(TRUE === $question_data['status'])				{					$data['question_response_data']  = $question_data['aaData'];				}            }						}		//echo "hi";		else		{			if(!empty($this->input->post()))			{				// Insert meeting				$result = $this->sanitize_input();								if(TRUE == $result['status'])				{						if(!empty($result['data']['tags']))					{					$tags = "".implode(",", $result['data']['tags'])."";					}					else					{					$tags = '';					}					$insert_template = array(					'ub_survey_template_id' => $result['data']['ub_survey_template_id'],					'name' => $result['data']['name'],					 'tags' => $tags,					'created_by' => $this->user_id,					'notes' => $result['data']['notes'],					'description' => $result['data']['description'],					'created_on' =>TODAY,					'modified_on'=>TODAY,					'modified_by' =>$this->user_id,					'builder_id' =>$this->builder_id					);					// echo '<pre>';print_r($insert_template);exit;					// $insert_template_data= implode(" ",$insert_template);					$response = $this->Mod_survey->add_template($insert_template);					$this->Mod_survey->response($response);									}				else				{					 $this->Mod_survey->response($result);				}							}	    }		//get survey tags custom fields from general value table		$args =array('classification'=>'survey_tags', 'where_clause' => '("int01" = 0 OR "int01" = '.$this->builder_id.')', 'type'=>'dropdown'); 		$survey_tags_array = $this->Mod_general_value->get_general_value($args);		$data['survey_tags'] = array();		if(isset($survey_tags_array['values']))		{			$data['survey_tags'] = $survey_tags_array['values'];		}		// echo'<pre>';print_r($data['survey_tags']);		$this->template->view($data);			}	/** To Save Template Question */	 	/*** New Template	* 	* @method: new_template 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: Gayathri Kalyani 	* @URL:  	*/	public function new_template_question($ub_survey_template_question_id=0)	{			// echo "HI";		$data = array(		'title'        => "SURVEY",				'content'      => 'content/survey/new_template',        'page_id'      => 'survey'				);  		$data['template_data'] = array();		$result = $this->sanitize_input();		 // echo '<pre>';print_r($this->input->post());exit;		if($ub_survey_template_question_id > 0 || null!==$this->input->post('ub_survey_template_question_id') && $this->input->post('ub_survey_template_question_id') > 0)		{			if(!empty($this->input->post()))			{			$result = $this->sanitize_input();			 // echo '<pre>';print_r($result);						 $update_template_question = array(					'ub_survey_template_question_id' => $result['data']['ub_survey_template_question_id'],					'survey_template_id' => $result['data']['survey_template_id'],					'question' => $result['data']['question_notes'],					'question_column_name' => $result['data']['res_col_name'],					'answer_type' => $result['data']['ans_type'],					'include_not_applicable' => isset($result['data']['include_not_applicable'])?'Yes':'No',					'modified_on' => TODAY,					'modified_by' =>$this->user_id,					'builder_id' =>$this->builder_id					);					//print_r($update_plan);	exit;						$response = $this->Mod_survey->update_template_question($update_template_question);				$this->Mod_survey->response($response);			}			else			{				$result_data = $this->Mod_survey->get_template_question(array(				'select_fields' => array('UB_SURVEY_TEMPLATE_QUESTIONS.survey_template_id','UB_SURVEY_TEMPLATE_QUESTIONS.ub_survey_template_question_id','UB_SURVEY_TEMPLATE_QUESTIONS.question','UB_SURVEY_TEMPLATE_QUESTIONS.question_column_name','UB_SURVEY_TEMPLATE_QUESTIONS.answer_type','UB_SURVEY_TEMPLATE_QUESTIONS.include_not_applicable'),				'join' => array('survey_template_questions'=> 'Yes'),				'order_clause' => 'UB_SURVEY_TEMPLATE_QUESTIONS.display_order ASC',				'where_clause' => (array('ub_survey_template_question_id' => $ub_survey_template_question_id))));								if(TRUE === $result_data['status'])				{					$data['template_data']  = $result_data['aaData'][0];				}            }						}		//echo "hi";		else		{			if(!empty($this->input->post()))			{				$result = $this->sanitize_input(); 				// echo '<pre>';print_r($result);exit;				if(TRUE == $result['status'])				{						$result_data = $this->Mod_survey->get_template_question(array(						'select_fields' => array('UB_SURVEY_TEMPLATE_QUESTIONS.display_order',),						'join' => array('survey_template_questions'=> 'Yes'),						'where_clause' => (array('survey_template_id' => $result['data']['survey_template_id'])),		'order_clause' => 'UB_SURVEY_TEMPLATE_QUESTIONS.display_order DESC',						'pagination' => array( 'iDisplayStart' => 0,'iDisplayLength' => 1)));					$display_order = 0;						// echo '<pre>';print_r($result_data);exit;					if($result_data['status'] == TRUE)					{						$display_order = $result_data['aaData'][0]['display_order'] + 1;					}										$insert_template_question = array(					'survey_template_id' => $result['data']['survey_template_id'],					'question' => $result['data']['question_notes'],					'question_column_name' => $result['data']['res_col_name'],					'answer_type' => $result['data']['ans_type'],					'include_not_applicable' => isset($result['data']['include_not_applicable'])?'Yes':'No',					'display_order' => $display_order,					'modified_on' => TODAY,					'modified_by' =>$this->user_id,					'builder_id' =>$this->builder_id					);					// echo '<pre>';print_r($insert_template);exit;					// $insert_template_data= implode(" ",$insert_template);					$response = $this->Mod_survey->add_template_question($insert_template_question);					$this->Mod_survey->response($response);					 // echo '<pre>';print_r($response);exit;				}				else				{					 $this->Mod_survey->response($result);				}							}	    }						$this->template->view($data);			}	/** 	* Delete TEMPLATE	* 	* @method: delete_template 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: G3kalyani	*/	public function delete_template()	{						$result = $this->sanitize_input();			if(TRUE === $result['status'])			{				$response = $this->Mod_survey->delete_template($result['data']);				$respoce_array = $this->get_template_list($page_count = 'result_array');				$this->module = 'SURVEY_TEMPLATE';				$search = 'template_search';				if($respoce_array['status'] == FALSE)				{				 if(isset($this->uni_session_get($search)['iDisplayStart']) && $this->uni_session_get($search)['iDisplayStart'] > 0)					{						$search_session_array['iDisplayStart'] = (($this->uni_session_get($search)['iDisplayStart']) - ($this->uni_session_get($search)['iDisplayLength']));				        $search_session_array['iDisplayLength'] = $this->uni_session_get($search)['iDisplayLength'];				        $this->uni_set_session($search, $search_session_array);					}				}			}			else			{				$this->Mod_survey->response($result);			}			$a = $this->Mod_survey->response($response);			echo '<pre>';print_r($a);exit;	}	/** 	* Delete TEMPLATE	* 	* @method: delete_template 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: G3kalyani	*/	public function delete_template_question()	{						$result = $this->sanitize_input();			if(TRUE === $result['status'])			{				$response = $this->Mod_survey->delete_template_question($result['data']);			}			else			{				$this->Mod_survey->response($result);			}			$a = $this->Mod_survey->response($response);			echo '<pre>';print_r($a);exit;	}		/** To Add and update New Survey */	 	/*** New Survey	* 	* @method: new_survey 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: Gayathri Kalyani 	* @URL:  	*/	public function new_survey($ub_survey_id=0)	{		$data = array(		'title'        => "SURVEY",				'content'      => 'content/survey/new_survey',        'page_id'      => 'survey'				); 		//get project id from task table // by satheesh kumar		if(empty($this->project_id) && $ub_survey_id > 0)		{			$where_args = array('ub_survey_id' => $ub_survey_id);			$project_id = $this->Mod_project->get_project_id(UB_SURVEY,$where_args);			$this->project_id = $project_id['aaData'][0]['project_id'];			$this->project_name = $project_id['aaData'][0]['project_name'];		}		//end code for get project id		if(isset($this->project_id) && !empty($this->project_id))		{			$all_type_users = $this->Mod_project->get_project_assigned_users(array('ub_project_id' =>$this->project_id, 'account_type' => 'all', 'dropdown_type' => 'optgroup'));		}		else		{			$args = array(BUILDERADMIN => array('builder_id' => $this->builder_id, 'account_type' => BUILDERADMIN), OWNER => array('builder_id' => $this->builder_id, 'account_type' => OWNER), SUBCONTRACTOR => array('builder_id' => $this->builder_id, 'account_type' => SUBCONTRACTOR));			$all_type_users = $this->Mod_user->get_users_by_type($args,'multiple');		}		$data['get_all_users'] = $all_type_users;				if($ub_survey_id > 0 || null!==$this->input->post('ub_survey_id') && $this->input->post('ub_survey_id') > 0)		{			if(!empty($this->input->post()))			{				$result = $this->sanitize_input();				// echo'<pre>';print_r($result);exit;				if(isset($result['data']['assigned_users']) &&  $result['data']['assigned_users'] !== "")				{					$result['data']['assigned_users'] = implode(",", $result['data']['assigned_users']);				}				else				{					$result['data']['assigned_users'] = NULL;				}				 				$update_survey = array(					'ub_survey_id' => $result['data']['ub_survey_id'],					'name' => $result['data']['name'],					'description' => $result['data']['description'],					'assigned_users' => $result['data']['assigned_users'],					'notes' => $result['data']['notes'],					'modified_on' => TODAY,					'released_on' => TODAY,					'created_on' =>TODAY,					'created_by' =>$this->user_id,					'released_by' =>$this->user_id,					'status' => $result['data']['status'],					'modified_by' =>$this->user_id,					'builder_id' =>$this->builder_id,					'project_id' => $result['data']['project_id']					);					//echo "<pre>";print_r($update_survey);exit;					$response = $this->Mod_survey->update_survey($update_survey);					$question_id = array();					if(isset($result['data']['question_id']) && !empty($result['data']['question_id']))					{						$question_id = explode(",",$result['data']['question_id']);					}					// echo '<pre>';print_r($question_id);					foreach($question_id as $key => $value)					{						$update_data = array();						$update_data['ub_survey_question_id'] = $question_id[$key];						$update_data['display_order'] = $key;						// echo '<pre>';print_r($update_data);exit;						$this->Mod_survey->update_survey_question($update_data);						}					$this->Mod_survey->response($response);			}			else			{				$result_data = $this->Mod_survey->get_survey(array(				'select_fields' => array('UB_SURVEY.ub_survey_id','UB_SURVEY.name','UB_SURVEY.description','UB_SURVEY.notes','UB_SURVEY.tags','UB_SURVEY.status','UB_SURVEY.assigned_users','UB_SURVEY.project_id'),				'where_clause' => (array('ub_survey_id' =>  $ub_survey_id))));				// echo '<pre>';print_r($result_data);exit;				if(TRUE === $result_data['status'])				{					$data['survey_data']  = $result_data['aaData'][0];				}								$question_data = $this->Mod_survey->get_survey_question(array(				'select_fields' => array('UB_SURVEY_QUESTIONS.survey_id','UB_SURVEY_QUESTIONS.ub_survey_question_id','UB_SURVEY_QUESTIONS.question','UB_SURVEY_QUESTIONS.question_column_name','UB_SURVEY_QUESTIONS.answer_type','UB_SURVEY_QUESTIONS.include_not_applicable'),				'order_clause' => 'UB_SURVEY_QUESTIONS.display_order ASC',				'where_clause' => (array('survey_id' => $ub_survey_id))));				if(TRUE === $question_data['status'])				{					$data['question_response_data']  = $question_data['aaData'];				}            }						}		else		{			if(!empty($this->input->post()))			{				// Insert meeting				$result = $this->sanitize_input();				 // echo '<pre>';print_r($result);				if(TRUE == $result['status'])				{						//username custom fields from user table					$post_array =  array('USER.builder_id'=>$this->user_session['builder_id']);					$assigned_users = $this->Mod_user->get_users(array(													'select_fields' => array('CONCAT_WS(" ",USER.first_name,USER.last_name ) AS first_name'),													'where_clause' => $post_array,													));					if(isset($result['data']['assigned_users']) &&  $result['data']['assigned_users'] !== "")					{						$result['data']['assigned_users'] = implode(",", $result['data']['assigned_users']);					}					else					{						$result['data']['assigned_users'] = NULL;					}					// echo '<pre>';print_r($assigned_users);					$insert_survey = array(						'ub_survey_id' => $result['data']['ub_survey_id'],						'name' => $result['data']['name'],						'assigned_users' => $result['data']['assigned_users'],						'description' => $result['data']['description'],						'created_on' =>TODAY,						'modified_on'=>TODAY,						'released_on' => TODAY,						'created_by' =>$this->user_id,						'released_by' =>$this->user_id,						'status' => $result['data']['status'],						'modified_by' =>$this->user_id,						'builder_id' =>$this->builder_id,						'project_id' =>$this->project_id,						);										// $insert_template_data= implode(" ",$insert_template);					$response = $this->Mod_survey->add_survey($insert_survey);					$this->Mod_survey->response($response);				}				else				{					 $this->Mod_survey->response($result);				}			}	    }		//get survey tags custom fields from general value table		$args =array('classification'=>'survey_tags', 'where_clause' => '("int01" = 0 OR "int01" = '.$this->builder_id.')', 'type'=>'dropdown'); 		$survey_tags_array = $this->Mod_general_value->get_general_value($args);		$data['survey_tags'] = array();		if(isset($survey_tags_array['values']))		{			$data['survey_tags'] = $survey_tags_array['values'];		}		// echo'<pre>';print_r($data);exit;											$this->template->view($data);			}	/** To Save New Survey Question */	 	/*** New Survey	* 	* @method: new_survey 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: Gayathri Kalyani 	* @URL:  	*/	public function new_survey_question($survey_question_id=0)	{	// echo "HI";		$data = array(		'title'        => "SURVEY",				'content'      => 'content/survey/new_survey',        'page_id'      => 'survey'				);  		$data['survey_question_data'] = array();		// echo '<pre>';print_r($this->input->post());exit;		if($survey_question_id > 0 || null!==$this->input->post('ub_survey_question_id') && $this->input->post('ub_survey_question_id') > 0)		{			if(!empty($this->input->post()))			{			$result = $this->sanitize_input();				// echo '<pre>';print_r($result);exit;			$update_survey_question = array(					'ub_survey_question_id' => $result['data']['ub_survey_question_id'],					'survey_id' => $result['data']['ub_survey_id'],					'question' => $result['data']['question_notes'],					'question_column_name' => $result['data']['res_col_name'],					'answer_type' => $result['data']['ans_type'],					'include_not_applicable' => isset($result['data']['include_not_applicable'])?'Yes':'No',					'modified_on' => TODAY,					'modified_by' =>$this->user_id,					'created_by' =>$this->user_id,					//'builder_id' =>$this->builder_id,					//'project_id' =>$this->project_id,					);				// echo '<pre>';print_r($update_survey_question);exit;					$response = $this->Mod_survey->update_survey_question($update_survey_question);				$this->Mod_survey->response($response);			}			else			{				$result_data = $this->Mod_survey->get_survey_question(array(				'select_fields' => array('UB_SURVEY.ub_survey_id','UB_SURVEY_QUESTIONS.survey_id','UB_SURVEY_QUESTIONS.ub_survey_question_id','UB_SURVEY_QUESTIONS.question','UB_SURVEY_QUESTIONS.question_column_name','UB_SURVEY_QUESTIONS.answer_type','UB_SURVEY_QUESTIONS.include_not_applicable'),				'join' => array('survey'=> 'Yes'),				'where_clause' => (array('ub_survey_question_id' => $ub_survey_question_id,))));				if(TRUE === $result_data['status'])				{					$data['survey_question_data']  = $result_data['aaData'][0];				}            }						}		//echo "hi";		else		{			if(!empty($this->input->post()))			{				$result = $this->sanitize_input();				// echo '<pre>';print_r($result);exit;				if(TRUE == $result['status'])				{						$result_data = $this->Mod_survey->get_survey_question(array(						'select_fields' => array('UB_SURVEY_QUESTIONS.display_order',),						'join' => array('survey'=> 'Yes'),						'where_clause' => (array('UB_SURVEY_QUESTIONS.survey_id' => $result['data']['ub_survey_id'])),						'order_clause' => 'UB_SURVEY_QUESTIONS.display_order DESC',						'pagination' => array( 'iDisplayStart' => 0,'iDisplayLength' => 1)));					$display_order = 0;						// echo '<pre>';print_r($this->project_id);exit;					if($result_data['status'] == TRUE)					{						$display_order = $result_data['aaData'][0]['display_order'] + 1;					}						$add_survey_question = array(						'survey_id' => $result['data']['ub_survey_id'],						'question' => $result['data']['question_notes'],						'question_column_name' => $result['data']['res_col_name'],						'answer_type' => $result['data']['ans_type'],						'include_not_applicable' => isset($result['data']['include_not_applicable'])?'Yes':'No',						'display_order' => $display_order,						'modified_on' => TODAY,						'modified_by' =>$this->user_id,						'created_by' =>$this->user_id,						'builder_id' =>$this->builder_id,						'project_id' => $result['data']['project_id']						);					// echo '<pre>';print_r($insert_template);exit;					// $insert_template_data= implode(" ",$insert_template);					$response = $this->Mod_survey->add_survey_question($add_survey_question);					$this->Mod_survey->response($response);									}				else				{					 $this->Mod_survey->response($result);				}			}	    }				//Get survey question data		//echo '<pre>';print_r($data);exit;		$this->template->view($data);			}		/** 	* Delete TEMPLATE	* 	* @method: delete_template 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: G3kalyani	*/	public function delete_survey_question()	{						$result = $this->sanitize_input();			if(TRUE === $result['status'])			{				$response = $this->Mod_survey->delete_survey_questions($result['data']);			}			else			{				$this->Mod_survey->response($result);			}			$a = $this->Mod_survey->response($response);			echo '<pre>';print_r($a);exit;	}		/** To Release Survey */	 	/*** Release Survey	* 	* @method: release_survey 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: Gayathri Kalyani 	* @URL:  	*/	public function release_survey()	{		$data = array(			'title'        => "SURVEY",					'content'      => 'content/survey/new_survey',			'page_id'      => 'survey'					); 		$result = $this->sanitize_input();		$result_data = $this->Mod_survey->get_template(array(		'select_fields' => array('UB_SURVEY_TEMPLATE.ub_survey_template_id','UB_SURVEY_TEMPLATE.name','UB_SURVEY_TEMPLATE.tags','UB_SURVEY_TEMPLATE.notes','UB_SURVEY_TEMPLATE.created_by','UB_SURVEY_TEMPLATE.notes','UB_SURVEY_TEMPLATE.description'),		// 'join' => array('survey_template_questions'=> 'Yes'),		'where_clause' => (array('ub_survey_template_id' => $result['data']['template_id'] ))));				$template_question_data = $this->Mod_survey->get_template_question(array(		'select_fields' => array('UB_SURVEY_TEMPLATE_QUESTIONS.survey_template_id','UB_SURVEY_TEMPLATE_QUESTIONS.ub_survey_template_question_id','UB_SURVEY_TEMPLATE_QUESTIONS.question','UB_SURVEY_TEMPLATE_QUESTIONS.question_column_name','UB_SURVEY_TEMPLATE_QUESTIONS.answer_type','UB_SURVEY_TEMPLATE_QUESTIONS.include_not_applicable','UB_SURVEY_TEMPLATE_QUESTIONS.display_order'),		// 'join' => array('survey_template_questions'=> 'Yes'),		'where_clause' => (array('survey_template_id' => $result['data']['template_id'] ))));		// echo '<pre>';print_r($template_question_data);				$insert_survey_array=array(		'name' => $result['data']['survay_name'],		'builder_id' =>  $this->builder_id,		'project_id' =>  $this->project_id,		'tags' =>  isset($result_data['aaData'][0]['tags'])?$result_data['aaData'][0]['tags']:'',		'notes' =>  isset($result_data['aaData'][0]['notes'])?$result_data['aaData'][0]['notes']:'',		'description' =>  isset($result_data['aaData'][0]['description'])?$result_data['aaData'][0]['description']:'',		'status' =>  'New',		'created_on' =>  TODAY,		'created_by'=>  $this->user_session['ub_user_id'],		'modified_by'=>  $this->user_session['ub_user_id'],		'modified_on' =>  TODAY		);		$response = $this->Mod_survey->add_survey($insert_survey_array);				if($template_question_data['status'] == TRUE)		{			$template_question = $template_question_data['aaData'];			$survey_id = $response['insert_id'];			// print_r($template_question);exit;			foreach ($template_question as $key => $value) 			{				$insert_data = array();				$insert_data['question'] = $value['question'];				$insert_data['question_column_name'] = $value['question_column_name'];				$insert_data['answer_type'] = $value['answer_type'];				$insert_data['include_not_applicable'] = $value['include_not_applicable'];				$insert_data['display_order'] = $value['display_order'];				$insert_data['survey_id'] = $survey_id;				$insert_data['builder_id'] = $this->builder_id;				$insert_data['project_id'] = $this->project_id;				$insert_data['created_on'] = TODAY;				$insert_data['created_by'] = $this->user_session['ub_user_id'];				$insert_data['modified_by'] = $this->user_session['ub_user_id'];				$insert_data['modified_on'] = TODAY;				$this->Mod_survey->add_survey_question($insert_data);							}		}				$this->Mod_survey->response($response);	}		/** 	* Delete TEMPLATE	* 	* @method: delete_template 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: G3kalyani	*/	public function delete_survey()	{						$result = $this->sanitize_input();			if(TRUE === $result['status'])			{				$response = $this->Mod_survey->delete_survey($result['data']);				$respoce_array = $this->get_survey_response_list($page_count = 'result_array');				$this->module = 'SURVEY_RESPONSE';				$search = 'response_search';				if($respoce_array['status'] == FALSE)				{				 if(isset($this->uni_session_get($search)['iDisplayStart']) && $this->uni_session_get($search)['iDisplayStart'] > 0)					{						$search_session_array['iDisplayStart'] = (($this->uni_session_get($search)['iDisplayStart']) - ($this->uni_session_get($search)['iDisplayLength']));				        $search_session_array['iDisplayLength'] = $this->uni_session_get($search)['iDisplayLength'];				        $this->uni_set_session($search, $search_session_array);					}				}			}			else			{				$this->Mod_survey->response($result);			}			$a = $this->Mod_survey->response($response);			echo '<pre>';print_r($a);exit;	}			/** Survey Response Page */	 	/*** Survey Response	* 	* @method: survey_response 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: Gayathri Kalyani 	* @URL:  	*/		public function survey_response($ub_survey_id=0)	{		$data = array(		'title'        => "SURVEY",				'content'      => 'content/survey/survey_response',        'page_id'      => 'survey',		        'ub_survey_id' => $ub_survey_id				);  		// echo '<pre>';print_r($data);				$result_data = $this->Mod_survey->get_survey(array(				'select_fields' => array('UB_SURVEY.name','PROJECT.project_name','UB_SURVEY.released_on','USER.first_name','UB_SURVEY.status','UB_SURVEY.ub_survey_id','UB_SURVEY.description'),				'join'=>array('project'=> 'Yes','user'=> 'Yes'),				'where_clause' => (array('ub_survey_id' =>  $ub_survey_id))));								if(TRUE === $result_data['status'])				{					$data['response_data']  = $result_data['aaData'][0];				}						// echo '<pre>';print_r($data);exit;				$this->template->view($data);	}	/** Survey Response Table Page */	 	/*** Survey Response Table	* 	* @method: survey_result 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: Gayathri Kalyani 	* @URL:  	*/		public function survey_result()	{		if(!empty($this->input->post()))		{			// Sanitize input			$result = $this->sanitize_input();							$post_array[] = array(								'field_name' => 'UB_SURVEY_QUESTIONS.survey_id',								'value'=> $result['data']['survey_id'], 								'type' => '='							);			$post_array[] = array(								'field_name' => 'UB_SURVEY_QUESTIONS.builder_id',								'value'=> $this->builder_id, 								'type' => '='							);							$where_str = $this->Mod_survey->build_where($post_array);			 						$result_column_ary = $this->Mod_survey->get_survey_question(array(			'select_fields' => array('UB_SURVEY_QUESTIONS.question_column_name','UB_SURVEY_QUESTIONS.survey_id','UB_SURVEY_QUESTIONS.ub_survey_question_id'),			'order_clause' => 'UB_SURVEY_QUESTIONS.display_order ASC',			'where_clause' => $where_str)); 			// echo '<pre>';print_r($result_column_ary);exit;  			$title_ary = array(							array('title' => 'Name'),							array('title' => 'User Type'),						);			foreach($result_column_ary['aaData'] as $key => $column_val)			{				 $title_ary[] = array('title' => $column_val['question_column_name']);			}			  // echo'<pre>';print_r($title_ary);exit;			$name_arry = $this->Mod_survey->get_survey(array(			'select_fields' => array('UB_SURVEY.assigned_users','UB_SURVEY.ub_survey_id','USER.first_name'),			'join'=> array('user'=>'Yes'),			'where_clause' => (array('ub_survey_id' => $result['data']['survey_id']))));			// echo '<pre>';print_r($name_arry);exit;						$user_array[] = array(					'field_name' => 'USER.ub_user_id',					'value'=> $name_arry['aaData'][0]['assigned_users'], 					'type' => '||',					'classification' => 'primary_ids'				);				/* $where_str = $this->Mod_user->build_where($user_array);								$user_result_data = $this->Mod_user->get_users(array(			'select_fields' => array('USER.ub_user_id as user_id', 'USER.first_name as first_name','USER.account_type as account_type'),			'where_clause' => $where_str)); */			$user_array[] = array(							'field_name' => 'UB_SURVEY_QUESTION_ANSWERS.builder_id',							'value'=> $this->builder_id, 							'type' => '='						);						$user_array[] = array(							'field_name' => 'UB_SURVEY_QUESTION_ANSWERS.survey_id',							'value'=> $result['data']['survey_id'], 							'type' => '='						);			//below where condition for fetching survey question answers for individual assigned users			$where_str = $this->Mod_user->build_where($user_array);					$result_data_ary = $this->Mod_survey->get_survey_question_answer(array(			'select_fields' => array('GROUP_CONCAT(UB_SURVEY_QUESTION_ANSWERS.survey_question_id) as survey_question_id','GROUP_CONCAT(UB_SURVEY_QUESTION_ANSWERS.answer) as answer','USER.ub_user_id as user_id', 'USER.first_name as first_name','USER.account_type as account_type'),			'join'=> array('user'=>'Yes'),			'group_clause'=> array('UB_SURVEY_QUESTION_ANSWERS.created_by'),			'where_clause' => $where_str)); 			for($i=0;$i<count($result_data_ary['aaData']);$i++)			{				if($result_data_ary['aaData'][$i]['account_type'] == BUILDERADMIN)				{					$result_data_ary['aaData'][$i]['account_type'] = 'BUILDER';				}				if($result_data_ary['aaData'][$i]['account_type'] == SUBCONTRACTOR)				{					$result_data_ary['aaData'][$i]['account_type'] = 'SUBCONTRACTOR';				}				if($result_data_ary['aaData'][$i]['account_type'] == OWNER)				{					$result_data_ary['aaData'][$i]['account_type'] = 'OWNER';				}			}			// echo '<pre>';print_r($result_column_ary['aaData']);			// echo '<pre>';print_r($result_data_ary);				$data_ary = array();			if($result_data_ary['status'] == TRUE)			{							$count_array=COUNT($result_data_ary['aaData']);													for($i=0; $i<$count_array; $i++)				{					$answer_data_ary = explode(',',$result_data_ary['aaData'][$i]['answer']);					$survey_question_id = explode(',',$result_data_ary['aaData'][$i]['survey_question_id']);					foreach($survey_question_id as $question_key => $question_value)					{						$question_id_with_answer[$question_value] = $answer_data_ary[$question_key];					}					// echo '<pre>';print_r($question_id_with_answer);exit;					$result_data_ary12['aaData'][] = array(															'user_id' => $result_data_ary['aaData'][$i]['user_id'],															'first_name' => $result_data_ary['aaData'][$i]['first_name'],															'account_type' => $result_data_ary['aaData'][$i]['account_type'],															'answer' => $question_id_with_answer														);				}				 // echo'<pre>';print_r($result_data_ary12['aaData']);exit;				$display_column_array = $result_column_ary['aaData'];				$data_ary = array();				$loop_count = 0;				foreach($result_data_ary12['aaData'] as $key => $data_val)				{					$data_ary[$loop_count][] = $data_val['first_name'];					$data_ary[$loop_count][] = $data_val['account_type'];					foreach($display_column_array as $key => $ans_val)					{						$data_ary[$loop_count][] = $data_val['answer'][$ans_val['ub_survey_question_id']];					}					/* foreach($data_val['answer'] as $key => $ans_val)					{						// echo '<pre>';print_r($key);exit;						$data_ary[$loop_count][] = $ans_val;					} */					$loop_count++;				}				// echo '<pre>';print_r($data_ary);exit;			}			$response_ary = array(								array(									'COLUMNS' => $title_ary,									'DATA' => $data_ary,																	)							);			// echo '<pre>';print_r($response_ary);exit;							$this->Mod_survey->response($response_ary);		}	}	/*** Survey Request Save page	* 	* @method: save_survey_request 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: Gayathri Kalyani 	* @URL:  	*/	public function save_survey_request($ub_survey_id = 0)	{		$data = array(		'title'        => "SURVEY",				'content'      => 'content/survey/save_survey',        'page_id'      => 'survey'				); 				/* $account_type_dropdown[] = array('id' => SUBCONTRACTOR,'val' => 'SUB');	    $account_type_dropdown[] = array('id' => OWNER,'val' => 'Owner');			    $data['account_type_dropdown_list'] = $this->Mod_survey->build_ci_dropdown_array($account_type_dropdown,'id', 'val'); */		//echo "<pre>";print_r($account_type_dropdown);exit;				$result_data = $this->Mod_survey->get_survey(array(				'select_fields' => array('UB_SURVEY.name','UB_SURVEY.description','UB_SURVEY.project_id','PROJECT.project_name','USER.first_name','UB_SURVEY.ub_survey_id','UB_SURVEY.status'),				'join'=>array('project'=> 'Yes','user'=> 'Yes'),				'where_clause' => (array('ub_survey_id' =>  $ub_survey_id))));				// echo $result_data['aaData'][0]['ub_survey_id'];exit;				   // echo '<pre>';print_r($result_data);exit;													 // $survey_id=$result_data['aaData'][0]['ub_survey_id'];									$post_array[] = array(								'field_name' =>'UB_SURVEY_QUESTIONS.survey_id',								'value'=> $ub_survey_id, 								'type' => '='							);				    // echo '<pre>';print_r($post_array);							$where_str = $this->Mod_survey->build_where($post_array);				$question_data = $this->Mod_survey->get_survey_question(array(				'select_fields' => array('UB_SURVEY_QUESTIONS.ub_survey_question_id','UB_SURVEY_QUESTIONS.survey_id','UB_SURVEY_QUESTIONS.project_id','UB_SURVEY_QUESTIONS.question','UB_SURVEY_QUESTIONS.question_column_name','UB_SURVEY_QUESTIONS.answer_type','UB_SURVEY_QUESTIONS.include_not_applicable'),				'order_clause' => 'UB_SURVEY_QUESTIONS.display_order ASC',				'where_clause' => $where_str));								   // echo'<pre>';print_r($question_data);exit;				if(TRUE === $result_data['status'])				{					$data['survey_data']  = $result_data['aaData'][0];				}				if(TRUE === $question_data['status'])				{					$data['question_data']  = $question_data['aaData'];					$data['question_count']  = count($question_data['aaData']);				}				$data['survey_id']  = $ub_survey_id;				// $xyz=count($question_data['aaData']);															    // echo'<pre>';print_r($data['question_count']);exit;								if(!empty($this->input->post())){			$result=$this->sanitize_input();			 // echo'<pre>';print_r($result);exit;		 $question_count=$result['data']['question_count'];			 // echo '<pre>';print_r($result);			// echo '<pre>'; print_r($question_count);			for ($i=0; $i < $question_count; $i++)			{				$insert_survey_question_answers= array(					'survey_id' => $result['data']['survey_id'],					'answer' => $result['data']['answer_'.$i],					 'not_applicable' => (isset($result['data']['notapplicable_'.$i]) && $result['data']['notapplicable_'.$i] =='on')? 'Yes':'No',					'survey_question_id' =>$result['data']['survey_question_id_'.$i],					'created_on' =>TODAY,					'created_by' =>$this->user_id,					'builder_id' =>$this->builder_id,					'project_id' =>$result['data']['project_id']					);					// $insert_template_data= implode(" ",$insert_template);					$servey_response = $this->Mod_survey->save_survey_question_answers($insert_survey_question_answers);							}			$this->Mod_survey->response($servey_response);		}		 if($ub_survey_id > 0 || null!==$this->input->post('ub_survey_id') && $this->input->post('ub_survey_id') > 0)		{							$result_data = $this->Mod_survey->get_survey_question_answer(array(				'select_fields' => array('UB_SURVEY_QUESTION_ANSWERS.answer','UB_SURVEY_QUESTION_ANSWERS.not_applicable','UB_SURVEY_QUESTION_ANSWERS.survey_id','UB_SURVEY_QUESTIONS.question','UB_SURVEY_QUESTIONS.answer_type'),				'join'=>array('survey_questions'=> 'Yes'),				'where_clause' => (array('UB_SURVEY_QUESTION_ANSWERS.survey_id' =>  $ub_survey_id,'UB_SURVEY_QUESTION_ANSWERS.created_by' =>  $this->user_id))));								$data['response_data']  = array(); 				if(TRUE === $result_data['status'])				{					$data['complete_survey'] = TRUE;					$data['response_data']  = $result_data['aaData'];				}				 // echo'<pre>';print_r($data['response_data']);exit;			   // echo'<pre>';print_r($data);exit;						}		// echo '<pre>';print_r($data);exit;		$this->template->view($data);					}		/** 	* close survey 	* @method: delete_template 	* @access: public 	* @param:  ajax post array	* @return: array 	*/	public function close_survey()	{				$result = $this->sanitize_input();		$survey_status = $this->Mod_survey->close_survey($result['data']);		$this->Mod_survey->response($survey_status);	}		/** 	* Insert / Update General value	* 	* @method: update_general_value 	* @access: public 	* @param: ajax post array	* @return: array 	* url encoded : bgxf19ncy91cgxf1Rhdgxf1VfZ2VuZXJhbF92YWx1ZS8-	*/	public function update_general_value()	{		if(!empty($this->input->post()))		{			// Sanitize input			$result = $this->sanitize_input();			if(TRUE === $result['status'])			{				$args = array('classification'=>$result['data']['classification'], 'type' => $result['data']['type'] ,'value' => $result['data']['value']);				$result = $this->Mod_general_value->update_general_value($args);			}			$this->Mod_survey->response($result);		}		else		{			$response['status'] = FALSE;			$response['message'] = 'Delete Failed: Post array is empty';		}	}	public function destroy_session()	{		if(!empty($this->input->post()))		{			// Sanitize input			$result = $this->sanitize_input();			if(TRUE === $result['status'])			{				$result = $this->Mod_survey->destroy_session($result['data']);			}			$this->Mod_survey->response($result);		}		else		{			$response['status'] = FALSE;			$response['message'] = 'Delete Failed: Post array is empty';		}	}	/** 	* template apply saved search	* 	* @method: template_apply_saved_search 	* @access: public 	* @param: ajax post array	* @return: array 	*/	public function template_apply_saved_search()	{		 $this->module = 'SURVEY_TEMPLATE';		/* Apply Filter code starts here */		   $post_array = array( 'builder_id' => $this->user_session['builder_id'],							    'user_id' => $this->user_session['ub_user_id'],							    'module_name' => $this->module		                      );		 $result_data = $this->Mod_saved_search->get_saved_search(array(												 'select_fields' => array(),												 'where_clause' => $post_array												 ));		if(!empty($this->input->post()))		{			if($result_data['status'] == true)			{				$save_search_id = $result_data['aaData'][0]['ub_saved_search_id'];				$task_array = $this->input->post();				$post_array = array(					'ub_saved_search_id' => $save_search_id,					'search_params' => "'".serialize($task_array)."'"				    );				$response = $this->Mod_saved_search->update_saved_search($post_array);				$this->Mod_saved_search->response($response);			}			else			{				$task_array = $this->input->post();				$post_array = array(					'search_params' => "'".serialize($task_array)."'"				);				$response = $this->Mod_saved_search->update_saved_search($post_array);				$this->Mod_saved_search->response($response);			}		}		else		{			$serialized_data = $result_data['aaData'][0]['search_params'];			$remove_single_quote = str_replace("'", '', $serialized_data);			$unserialized_data = unserialize($remove_single_quote);			$result_data['aaData'][0]['search_params'] = $unserialized_data;			if(!empty($unserialized_data))			{				if(!empty($unserialized_data['tags']))				{					// Set value in session					$search_session_array['tags'] = $unserialized_data['tags'];				}				// Setting session 				$this->uni_set_session('template_search', $search_session_array);								// Response data				$this->Mod_survey->response($result_data);			}		}	}	/** 	* Survey Response apply saved search	* 	* @method: template_apply_saved_search 	* @access: public 	* @param: ajax post array	* @return: array 	*/	public function response_apply_saved_search()	{		 $this->module = 'SURVEY_RESPONSE';		/* Apply Filter code starts here */		   $post_array = array( 'builder_id' => $this->user_session['builder_id'],							    'user_id' => $this->user_session['ub_user_id'],							    'module_name' => $this->module		                      );		 $result_data = $this->Mod_saved_search->get_saved_search(array(												 'select_fields' => array(),												 'where_clause' => $post_array												 ));		if(!empty($this->input->post()))		{			if($result_data['status'] == true)			{				$save_search_id = $result_data['aaData'][0]['ub_saved_search_id'];				$task_array = $this->input->post();				$post_array = array(					'ub_saved_search_id' => $save_search_id,					'search_params' => "'".serialize($task_array)."'"				    );				$response = $this->Mod_saved_search->update_saved_search($post_array);				$this->Mod_saved_search->response($response);			}			else			{				$task_array = $this->input->post();				$post_array = array(					'search_params' => "'".serialize($task_array)."'"				);				$response = $this->Mod_saved_search->update_saved_search($post_array);				$this->Mod_saved_search->response($response);			}		}		else		{			$serialized_data = $result_data['aaData'][0]['search_params'];			$remove_single_quote = str_replace("'", '', $serialized_data);			$unserialized_data = unserialize($remove_single_quote);			$result_data['aaData'][0]['search_params'] = $unserialized_data;			if(!empty($unserialized_data))			{				$search_session_array = array();				if(!empty($unserialized_data['tags']))				{					// Set value in session					$search_session_array['tags'] = $unserialized_data['tags'];				}				if(!empty($unserialized_data['user_id']))				{					// Set value in session					$search_session_array['user_id'] = $unserialized_data['user_id'];				}				// echo '<pre>';print_r($search_session_array);exit;					// Setting session 				$this->uni_set_session('response_search', $search_session_array);								// Response data				$this->Mod_survey->response($result_data);			}		}	}	/** 	* Survey Request apply saved search	* 	* @method: template_apply_saved_search 	* @access: public 	* @param: ajax post array	* @return: array 	*/	public function survey_request_apply_saved_search()	{		 $this->module = 'SURVEY_REQUEST';		/* Apply Filter code starts here */		   $post_array = array( 'builder_id' => $this->user_session['builder_id'],							    'user_id' => $this->user_session['ub_user_id'],							    'module_name' => $this->module		                      );		 $result_data = $this->Mod_saved_search->get_saved_search(array(												 'select_fields' => array(),												 'where_clause' => $post_array												 ));		if(!empty($this->input->post()))		{			if($result_data['status'] == true)			{				$save_search_id = $result_data['aaData'][0]['ub_saved_search_id'];				$task_array = $this->input->post();				$post_array = array(					'ub_saved_search_id' => $save_search_id,					'search_params' => "'".serialize($task_array)."'"				    );				$response = $this->Mod_saved_search->update_saved_search($post_array);				$this->Mod_saved_search->response($response);			}			else			{				$task_array = $this->input->post();				$post_array = array(					'search_params' => "'".serialize($task_array)."'"				);				$response = $this->Mod_saved_search->update_saved_search($post_array);				$this->Mod_saved_search->response($response);			}		}		else		{			$serialized_data = $result_data['aaData'][0]['search_params'];			$remove_single_quote = str_replace("'", '', $serialized_data);			$unserialized_data = unserialize($remove_single_quote);			$result_data['aaData'][0]['search_params'] = $unserialized_data;			if(!empty($unserialized_data))			{				$search_session_array = array();				if(!empty($unserialized_data['status']))				{					// Set value in session					$search_session_array['status'] = $unserialized_data['status'];				}				// echo '<pre>';print_r($search_session_array);exit;					// Setting session 				$this->uni_set_session('survey_request_search', $search_session_array);								// Response data				$this->Mod_survey->response($result_data);			}		}	}	/*** Survey Request Save page	* 	* @method: auto_login	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: Sidhartha	* @URL: c3VydmV5L2F1dgxf19fbgxf19naW4v	*/	public function auto_login($ub_survey_id = 0,$ub_user_id = 0, $project_id =0)	{		//echo "survey id".$ub_survey_id;		//echo "user_id".$ub_user_id;		//echo "project_id".$project_id;exit; 					}}