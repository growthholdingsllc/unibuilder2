<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Bids extends UNI_Controller {		public function __construct()  {    parent::__construct();		$this->load->model(array('Mod_bid','Mod_general_value','Mod_timezone','Mod_user','Mod_saved_search','Mod_cost_code','Mod_project','Mod_comment','Mod_reminder','Mod_message','Mod_notification','Mod_subcontractor','Mod_doc','Mod_builder','Mod_template','Mod_checklist','Mod_schedule','Mod_po_co'));		$this->load->helper('url');	  }	public function index()	{     		$data = array(		'title'        => "BIDS",				'content'      => 'content/bids/bids',        'page_id'      => 'bids',		'bids_list'	   => 'bids_list',		'data_table'   => 'data_table',		'search_session_array' => $this->uni_session_get('SEARCH'),		'date_all'	   => 'date_all'		);  // echo "<br>decrypt---> ".$abc = $this->crypt->encrypt('bids/get_bid_subcontractor/'); 				//Get category from general value table		$packagestatus_args = array('classification'=>'bid_package_status', 'where_clause' => '("int01" = 0 OR "int01" = '.$this->user_session['builder_id'].')', 'type'=>'dropdown');		$packagestatus_result = $this->Mod_general_value->get_general_value($packagestatus_args);		$data['packagestatus_array'] = $packagestatus_result['values'];		//Get Locations from general value table		$bidstatus_args = array('classification'=>'bid_status', 'where_clause' => '("int01" = 0 OR "int01" = '.$this->user_session['builder_id'].')', 'type'=>'dropdown');		$bidstatus_result = $this->Mod_general_value->get_general_value($bidstatus_args);		$data['bidstatus_array'] = $bidstatus_result['values'];		 //Apply filter code		$post_array = array( 'builder_id' => $this->user_session['builder_id'],							 'user_id' => $this->user_session['ub_user_id'],							 'module_name' => $this->module		 );		 $result_data = $this->Mod_saved_search->get_saved_search(array(												 'select_fields' => array(),												 'where_clause' => $post_array												 ));				if($result_data['status'] == true)		{			$apply_filter = true;		}		else		{			$apply_filter = false;;		}				$data['apply_filter'] = $apply_filter;				//template drop down	    $template_list = $this->Mod_template->get_template(array(					'select_fields' => array('TEMPLATE.ub_template_id','TEMPLATE.template_name'),					'where_clause' => (array('TEMPLATE.builder_id' => $this->user_session['builder_id']))					));	    if( $template_list['status'] == TRUE){						//$data['template_list']= $template_list['aaData'];			$data['template_list'] = $this->Mod_project->build_ci_dropdown_array($template_list['aaData'],'ub_template_id', 'template_name');	   	}		//echo '<pre>';print_r($data['template_list']);exit;		$this->template->view($data);	}		public function bid_subcontractor(){		$data = array(		'title'        => "BIDS",				'content'      => 'content/bids/edit_bid',        'page_id'      => 'bids',		'bids_list'	   => 'bids_list',		'data_table'   => 'data_table',		'date_all'	   => 'date_all'      		);		$this->template->view($data);	}	/*	* save Bid	* @method: save_bid 	* @access: public 	* @param:  	* @return:  response array	* url encoded : Ymlkcy9zYXZlX2JpZC8-	*/	public function save_bid($ub_bid_id = 0)	{		$data = array(			'title'	=> "BIDS",					'content' => 'content/bids/save_bid',			'page_id' => 'bids',			'date_all' => 'date_all',			'data_table' => 'data_table',			'cost_code_selected'=> '',			'checklist_selected'=> '',			'schedule_selected'	=> '',			'sub_contractor_selected'	=> '',		);		$result_data = array();		$post_data = array();		//get project id from task table // by satheesh kumar		if(empty($this->project_id) && $ub_bid_id > 0)		{		$where_args = array('ub_bid_id' => $ub_bid_id);		$project_id = $this->Mod_project->get_project_id(UB_BID,$where_args);		$this->project_id = $project_id['aaData'][0]['project_id'];		$this->project_name = $project_id['aaData'][0]['project_name'];		}		//end code for get project id				$get_folder_id = array('select_fields' => array('ub_doc_folder_id'),                               'where_clause' => (array('builder_id' =>  $this->user_session['builder_id'],'project_id' => $this->project_id,'ui_folder_name' => $this->module))                               );		$all_folder = $this->Mod_doc->get_folder_id($get_folder_id);		if (isset($all_folder['aaData']) && !empty($all_folder)) 		{				$data['folder_id'] = $all_folder['aaData']['0']['ub_doc_folder_id'];		}		$dir_response = $this->Mod_doc->create_default_dir();				if ($dir_response['status'] == TRUE) 		{			$data['temprory_dir_id'] = $dir_response['temp_directory_id'];		}		else		{		  $data['temprory_dir_id'] = '1';			}		//Get all projects list from project table with the builder_id		 $project_list = $this->Mod_project->get_projects(array(					'select_fields' => array('PROJECT.ub_project_id','PROJECT.project_name'),					'where_clause' => array('PROJECT.builder_id'=> $this->builder_id)					)); 		$data['project_lists']=array();		if(TRUE === $project_list['status'])		{			$data['project_lists'] = $this->Mod_project->build_ci_dropdown_array($project_list['aaData'],'ub_project_id', 'project_name');		} 		//Codition check wheather the ub_daily_log_id value is greater than 0 or not		if($ub_bid_id > 0 || null!==$this->input->post('ub_bid_id') && $this->input->post('ub_bid_id') > 0)		{			$this->ub_bid_id = (null!=$this->input->post('ub_bid_id')) ? $this->input->post('ub_bid_id') : $ub_bid_id;			$task_data = array(	  'flag' => 1, 								  'builder_id'	=> $this->user_session['builder_id'],								  'projectid' => $this->project_id,								  'folderid' => 0,								  'modulename' => $this->module,								  'moduleid' => $this->ub_bid_id,								);			$result_array = $this->Mod_doc->get_files_for_folder($task_data);			//echo "<pre>";print_r($result_array);exit;			$count = count($result_array);			$session_id = $this->session->userdata('session_id');						for ($i=0; $i < $count ; $i++)			{				if(isset($result_array[$i]['system_file_name']) && !empty($result_array[$i]['system_file_name']))				{					$exp = explode('/', DOC_PATH.$result_array[$i]['system_file_name']);					$thumb_array = array(											'source_image' => DOC_PATH.$result_array[$i]['system_file_name'],											'new_image' => DOC_TEMP_PATH.$session_id.'/'.$dir_response['thumbnail_path'].'/'.$exp[count($exp)-1]									);					$this->create_thumb($thumb_array);										//$image_path = $result_array[$i]['system_file_name'];					copy(DOC_PATH.$result_array[$i]['system_file_name'],DOC_TEMP_PATH.$session_id.'/'.$dir_response['temp_directory_id'].'/'.$exp[count($exp)-1]);				}			}						 if(!empty($this->input->post()))		     {		 	  //Sanitize input			  $result = $this->sanitize_input();			  if(TRUE === $result['status'])			  {			  	if(isset($result['data']['due_time']) && $result['data']['due_time'] != '')			    {				 $result['data']['due_time'] = date('H:i:s', strtotime($result['data']['due_time']));			    }			    if(isset($result['data']['due_date']) && $result['data']['due_date'] !='')			    {				 $result['data']['due_date'] = date("Y-m-d", strtotime($result['data']['due_date']));			    }			    			    if(isset($result['data']['schedule_id']) && $result['data']['schedule_id'] !== null && $result['data']['schedule_id']!='Nothing selected')			    {				   $result['data']['schedule_id'] = $result['data']['schedule_id'];			    }			    else			    {			    	$result['data']['schedule_id'] = '';			    }			    if(isset($result['data']['checklist_id']) && $result['data']['checklist_id'] !== null && $result['data']['checklist_id']!='Nothing selected')			    {			   					$result['data']['checklist_id'] = "".implode(",", $result['data']['checklist_id'])."";				}				else				{					$result['data']['checklist_id'] = '';				}																$bid_update_array = array(				'ub_bid_id' => $result['data']['ub_bid_id'],			  	'builder_id' => $this->user_session['builder_id'],			  	'released_date' => TODAY,			  	'project_id' => $result['data']['project_id'],			  	'package_title' => $result['data']['package_title'],			  	'number_days' => $result['data']['number_days'],			  	'before_or_after' => $result['data']['before_or_after'],			  	'schedule_id' => $result['data']['schedule_id'],			  	'due_date_time' => $result['data']['due_date'] . ' ' . $result['data']['due_time'],			  	'due_date' => $result['data']['due_date'],			  	'due_time' => $result['data']['due_time'],			  	'daily_sub_reminder' => $result['data']['daily_sub_reminder'],			  	'checklist_id' => $result['data']['checklist_id'],			  	'has_checklist' => isset($result['data']['has_checklist']) ? "Yes" : "No",			  	'allow_multi_bids' => isset($result['data']['allow_multi_bids']) ? "Yes" : "No",			  	'description' => $result['data']['description'],			  	'invitation_text' => $result['data']['invitation_message'],			  	'status' => $result['data']['status'],	            'created_by' => $this->user_session['ub_user_id'],	            'created_on' => TODAY,	            'modified_by' => $this->user_session['ub_user_id'], 	            'modified_on' => TODAY,	            'schedule_due_date' => date("Y-m-d", strtotime($result['data']['schedule_due_date'])));				 				 if($result['data']['due_date'] == '' && $result['data']['due_time'] == '')			     {				   unset($bid_update_array['due_date_time']);			     }                 if($result['data']['due_date'] == '')			     {				  unset($bid_update_array['due_date']);			     }			     if($result['data']['due_time'] == '')			     {				  unset($bid_update_array['due_time']);			     }			     $get_bid_status = $this->Mod_bid->get_bids(array(					         'select_fields' => array('BID.status'),			                 'join'=> array('project'=>'Yes','bid_request'=>'Yes','cost_code' => 'Yes'),  			                 'where_clause' => (array('ub_bid_id' =>  $result['data']['ub_bid_id']))			      ));			     if($get_bid_status['aaData'][0]['status'] == 'In Progress')				 {					$bid_update_array['pricing_format'] = $result['data']['pricing_format'];				 }			     //print_r($get_bid_status);			     if($result['data']['status'] != 'Released' || $get_bid_status['aaData'][0]['status'] == 'Released')				 {					unset($bid_update_array['released_date']);				 }			     if(isset($result['data']['deadline_type']) && isset($result['data']['schedule_id']) && $result['data']['schedule_id'] > 0)			     {			     	//unset($bid_update_array['due_date_time']);			     	//unset($bid_update_array['due_date']);			     	//unset($bid_update_array['due_time']);			     	$bid_update_array['due_date'] = '';			     	$bid_update_array['due_time'] = '';			     }			     else			     {			     	//unset($bid_update_array['number_days']);			     	//unset($bid_update_array['before_or_after']);			     	//unset($bid_update_array['schedule_id']);			     	$bid_update_array['number_days'] = 0;			     	$bid_update_array['schedule_id'] = 0;			     	$bid_update_array['before_or_after'] = '';			     }			     				 // update the record				 $response = $this->Mod_bid->update_bid($bid_update_array);				 if(TRUE == $response['status'])				 {				 //insert record in ub_bid_request table				  if(isset($result['data']['sub_contractor_id']) && $result['data']['sub_contractor_id'] !== null && $result['data']['sub_contractor_id']!='Nothing selected'){ 				  $request_table_insert_array = array(					'builder_id' => $this->user_session['builder_id'],					'project_id' =>  $result['data']['project_id'],					'sub_contractor_id' => $result['data']['sub_contractor_id'],					'due_date_time' => $result['data']['due_date'] . ' ' . $result['data']['due_time'],					'reminder_id' => $result['data']['daily_sub_reminder'],					'module_name' => $this->module,					'bid_id' => $result['data']['ub_bid_id'],					'bid_sub_status' => $result['data']['status'],					'sub_viewed' => 'No',					'created_by' => $this->user_session['ub_user_id'],					'created_on' => TODAY,					'modified_by' => $this->user_session['ub_user_id'], 		            'modified_on' => TODAY,		            'daily_sub_reminder' => $result['data']['daily_sub_reminder']);				  //print_r($request_table_insert_array);exit;					$response_request_table = $this->Mod_bid->add_request($request_table_insert_array);}					else					{						$request_table_delete_array = array(					    'bid_id' => $result['data']['ub_bid_id'],					    );						$response_request_table = $this->Mod_bid->delete_all_request($request_table_delete_array);					}									//Update record in ub_bid_cost_code table				if($get_bid_status['aaData'][0]['status'] == 'In Progress'){				if($result['data']['pricing_format'] == 'Line Items'){				 						$cost_code_update_array = array(					'ub_bid_cost_code_id' => $result['data']['code'],				  	'builder_id' => $this->user_session['builder_id'],				  	'project_id' => $result['data']['project_id'],				  	'bid_id' => $result['data']['ub_bid_id'],				  	'cost_code_id' => $result['data']['cost_code_id'],				  	'cost_code_description' => $result['data']['sub_description'],				  	'status' => $result['data']['status'],		            'code' => $result['data']['code'],		            'modified_by' => $this->user_session['ub_user_id'], 		            'modified_on' => TODAY,);					  $response_cost_code = $this->Mod_bid->update_cost_code($cost_code_update_array);				 }}				 if(isset($result['data']['deadline_type']) && isset($result['data']['schedule_id']) && $result['data']['schedule_id'] > 0)			      {			    	$link_to_schedule_array = array(							'builder_id' => $this->builder_id,							'project_id' => $result['data']['project_id'],							'module_name' => $this->module,							'module_id' => $result['data']['ub_bid_id'],							'schedule_id' => $result['data']['schedule_id'],							'lag' => $result['data']['number_days'],							'before_or_after' => $result['data']['before_or_after'],							'due_date' => date("Y-m-d", strtotime($result['data']['schedule_due_date'])),							'created_on' => TODAY,							'created_by' => $this->user_id,							'modified_on' => TODAY,							'modified_by' => $this->user_id							);					$this->Mod_schedule->update_link_to($link_to_schedule_array);					//echo "hi";exit;			     }			     else			     {			     	$link_to_schedule_array = array(							'builder_id' => $this->builder_id,							'project_id' => $result['data']['project_id'],							'module_name' => $this->module,							'module_id' => $result['data']['ub_bid_id'],							'schedule_id' => $result['data']['schedule_id'],							'lag' => $result['data']['number_days'],							'before_or_after' => $result['data']['before_or_after'],							'due_date' => date("Y-m-d", strtotime($result['data']['schedule_due_date'])),							'created_on' => TODAY,							'created_by' => $this->user_id,							'modified_on' => TODAY,							'modified_by' => $this->user_id							);			     	$this->Mod_schedule->delete_link_to($link_to_schedule_array);			     }			     $this->Mod_bid->response($response);			    }			  }			 }			 else			 {			 	$result_data = $this->Mod_bid->get_bids(array(					         'select_fields' => array('PROJECT.ub_project_id','PROJECT.project_name','Group_concat(BID_REQUEST.sub_contractor_id) as sub_contractor_id','BID.ub_bid_id', 'BID.builder_id','BID.project_id','BID.package_title','BID.number_days','BID.before_or_after','BID.schedule_id','BID.due_date_time','BID.due_date','BID.due_time','BID.daily_sub_reminder','BID.allow_multi_bids','BID.pricing_format','BID.has_checklist','BID.checklist_id','BID.description','BID.invitation_text','BID.status','Group_concat(BID_REQUEST.ub_bid_request_id) as bid_request_id'),			                 'join'=> array('project'=>'Yes','bid_request'=>'Yes','cost_code' => 'Yes'),  			                 'where_clause' => (array('ub_bid_id' =>  $ub_bid_id))			));			$get_cost_code_result = $this->Mod_bid->get_cost_code(array(					         'select_fields' => array('Group_concat(COST_CODE.ub_bid_cost_code_id) as ub_bid_cost_code_id','Group_concat(COST_CODE.cost_code_id) as cost_code_id','Group_concat(COST_CODE.cost_code_description) as cost_code_description','Group_concat(VARIANCE_CODE.cost_variance_code) as cost_variance_code'),			                 'join'=> array('bid'=>'Yes','variance_code'=>'Yes'),  			                 'where_clause' => (array('BID.ub_bid_id' =>  $ub_bid_id))			));											if($result_data['aaData'][0]['number_days'] > 0 || $result_data['aaData'][0]['schedule_id'] > 0)			{				$result_data['aaData'][0]['link_to'] = 'Yes';			}			if($result_data['aaData'][0]['due_date'] == '0000-00-00')			{				unset($result_data['aaData'][0]['due_date']);			}			if($result_data['aaData'][0]['due_time'] == '00:00:00')			{				unset($result_data['aaData'][0]['due_time']);			}			if(TRUE === $get_cost_code_result['status'])			{				$data['get_cost_code_result']  = $get_cost_code_result['aaData'][0];			}						if(TRUE === $result_data['status'])			{				$data['bid_data']  = $result_data['aaData'][0];			}			//List page of requested bidpackages			$datetime_array = array('BID.released_date'=>'released_date','BID_REQUEST.submitted'=>'submitted');			$request_data = $this->Mod_bid->get_bidrequest(array(					         'select_fields' => array('SUBCONTRACTOR.company as subcontractor_name','BID_REQUEST.ub_bid_request_id','BID_REQUEST.sub_contractor_id','BID_REQUEST.sub_viewed','BID_REQUEST.will_bid','BID_REQUEST.bid_amount','BID_REQUEST.bid_sub_status','(SUBCONTRACTOR.ub_subcontractor_id) AS subcontractor_id,'.$this->Mod_user->format_user_datetime($datetime_array)),			                 'join'=> array('project'=>'Yes','bid'=>'Yes','sub' => 'Yes','user' => 'Yes'),  			                 'where_clause' => (array('ub_bid_id' =>  $ub_bid_id))			));			if(TRUE === $request_data['status'])			{				$data['request_data']  = $request_data['aaData'];				$total_accept_amount = $this->Mod_bid->get_bidrequest(array(					         'select_fields' => array('SUM(BID_REQUEST.bid_amount) AS bid_amount'),			                 'join'=> array('project'=>'Yes','bid'=>'Yes','sub' => 'Yes','user' => 'Yes'),  			                 'where_clause' => (array('ub_bid_id' =>  $ub_bid_id,'bid_sub_status' => 'Accepted'))			    ));			    $data['accepted_amounts']  = $total_accept_amount['aaData'][0];			    //print_r($data['accepted_amounts']);exit;			}			$ub_project_id = $result_data['aaData'][0]['project_id'];			/*$args_sub['where_clause'] = array('builder_id'=>$this->builder_id);		    $args_sub['select_fields'] = array('ub_subcontractor_id', 'company');		    $sub_contractor_options = $this->Mod_bid->get_db_option(UB_SUBCONTRACTOR, $args_sub);		    $data['sub_contractor_options'] = $sub_contractor_options;		    $sub_contractors = $this->Mod_bid->get_db_options(UB_SUBCONTRACTOR, $args_sub);		    $data['sub_contractors'] = $sub_contractors;*/		    $user_list = $this->Mod_project->get_project_subcontractor_users(array('ub_project_id' =>$ub_project_id, 'account_type' => SUBCONTRACTOR, 'assigned_type' => 'yes', 'dropdown_type' => ''));						$sub_contractor_options =array();			$sub_contractors =array();			if(TRUE === $user_list['status'])			{				$sub_contractor_options = $this->Mod_bid->build_ci_dropdown_array($user_list['aaData'],'subcontractor_id', 'full_name');				$sub_contractors = $this->Mod_bid->build_ci_dropdown_array($user_list['aaData'],'subcontractor_id', 'full_name');			}			unset($sub_contractor_options['']);			$data['sub_contractor_options'] = $sub_contractor_options;			$sub_contractors_lists = $this->Mod_project->get_project_assigned_users(array('ub_project_id' =>$ub_project_id, 'account_type' => 'all', 'assigned_type' => 'yes', 'dropdown_type' => 'optgroup'));			unset($sub_contractors_lists['Owner']);			$nothing_selected_array = array(''=>'Nothing Selected');			$data['sub_contractors']=  $nothing_selected_array + $sub_contractors_lists;			//$data['sub_contractors'] = $sub_contractors;			/*$sub_args = array(SUBCONTRACTOR => array('builder_id' => $this->builder_id, 'account_type' => SUBCONTRACTOR));			 $all_sub_users = $this->Mod_user->get_subcontractor_by_type($sub_args,'multiple');			 $data['sub_contractor_options'] = $all_sub_users;			 $data['sub_contractors'] = $all_sub_users;*/			 //print_r($all_sub_users);exit;						   	       }	     } 	    // Here ub_bid_id value is 0. So It will enter to Insert function		else		{		  if(!empty($this->input->post()))		  {			$result = $this->sanitize_input();			if(TRUE === $result['status'])			{				//print_r($result);exit;				if(isset($result['data']['due_time']) && $result['data']['due_time'] != '')			    {				 $result['data']['due_time'] = date('H:i:s', strtotime($result['data']['due_time']));			    }			    if(isset($result['data']['due_date']) && $result['data']['due_date'] !='')			    {				 $result['data']['due_date'] = date("Y-m-d", strtotime($result['data']['due_date']));			    }			    if(isset($result['data']['checklist_id']) && $result['data']['checklist_id'] !== null && $result['data']['checklist_id']!='Nothing selected')			    {			   					$result['data']['checklist_id'] = "".implode(",", $result['data']['checklist_id'])."";				}				else				{					$result['data']['checklist_id'] = '';				}			    if(isset($result['data']['schedule_id']) && $result['data']['schedule_id'] !== null && $result['data']['schedule_id']!='Nothing selected')			    {				   $result['data']['schedule_id'] = $result['data']['schedule_id'];			    }			    else			    {			    	$result['data']['schedule_id'] = '';			    }							$bid_insert_array = array(			  	'builder_id' => $this->user_session['builder_id'],			  	'project_id' => $this->project_id,			  	'package_title' => $result['data']['package_title'],			  	'number_days' => $result['data']['number_days'],			  	'before_or_after' => $result['data']['before_or_after'],			  	'schedule_id' => $result['data']['schedule_id'],			  	'due_date_time' => $result['data']['due_date'] . ' ' . $result['data']['due_time'],			  	'due_date' => $result['data']['due_date'],			  	'due_time' => $result['data']['due_time'],			  	'daily_sub_reminder' => $result['data']['daily_sub_reminder'],			  	'pricing_format' => $result['data']['pricing_format'],			  	'checklist_id' => $result['data']['checklist_id'],			  	'has_checklist' => isset($result['data']['has_checklist']) ? "Yes" : "No",			  	'allow_multi_bids' => isset($result['data']['allow_multi_bids']) ? "Yes" : "No",			  	'description' => $result['data']['description'],			  	'status' => 'In Progress',	            'created_by' => $this->user_session['ub_user_id'],	            'created_on' => TODAY,	            'modified_by' => $this->user_session['ub_user_id'], 	            'modified_on' => TODAY,	            'schedule_due_date' => date("Y-m-d", strtotime($result['data']['schedule_due_date']))	            );				 if($result['data']['due_date'] == '' && $result['data']['due_time'] == '')			     {				   unset($bid_insert_array['due_date_time']);			     }                 if($result['data']['due_date'] == '')			     {				  unset($bid_insert_array['due_date']);			     }			     if($result['data']['due_time'] == '')			     {				  unset($bid_insert_array['due_time']);			     }			     if(isset($result['data']['deadline_type']) && isset($result['data']['schedule_id']) && $result['data']['schedule_id'] > 0)			     {			     	unset($bid_insert_array['due_date_time']);			     	unset($bid_insert_array['due_date']);			     	unset($bid_insert_array['due_time']);			     }			     else			     {			     	unset($bid_insert_array['number_days']);			     	unset($bid_insert_array['before_or_after']);			     	unset($bid_insert_array['schedule_id']);			     }				// insert the record				$response = $this->Mod_bid->add_bid($bid_insert_array);								if(TRUE == $response['status'])				{				$bid_id = $response['insert_id'];				//Insert cost codes in ub_bid_cost_code table						if($result['data']['pricing_format'] == 'Line Items'){									$cost_code_insert_array = array(					'ub_bid_cost_code_id' => '',				  	'builder_id' => $this->user_session['builder_id'],				  	'project_id' => $this->project_id,				  	'bid_id' => $bid_id,				  	'cost_code_id' => $result['data']['cost_code_id'],				  	'cost_code_description' => $result['data']['sub_description'],				  	'status' => 'In Progress',		            'created_by' => $this->user_session['ub_user_id'],		            'created_on' => TODAY,		            'modified_by' => $this->user_session['ub_user_id'], 		            'modified_on' => TODAY,);		            					  $response_cost_code = $this->Mod_bid->add_cost_code($cost_code_insert_array);				      				}				if(isset($result['data']['deadline_type']))			    {			    	$link_to_schedule_array = array(							'builder_id' => $this->builder_id,							'project_id' => $result['data']['project_id'],							'module_name' => $this->module,							'module_id' => $response['insert_id'],							'schedule_id' => $result['data']['schedule_id'],							'lag' => $result['data']['number_days'],							'before_or_after' => $result['data']['before_or_after'],							'due_date' => date("Y-m-d", strtotime($result['data']['schedule_due_date'])),							'created_on' => TODAY,							'created_by' => $this->user_id,							'modified_on' => TODAY,							'modified_by' => $this->user_id							);					$this->Mod_schedule->add_link_to($link_to_schedule_array);					//echo "hi";exit;			    }				 				}			    $this->Mod_bid->response($response);							}			else			{								$this->Mod_bid->response($result);			}		  }	    }	     $project_list = $this->Mod_project->get_projects(array(					'select_fields' => array('PROJECT.ub_project_id','PROJECT.project_name'),					'where_clause' => (array('PROJECT.builder_id' =>  $this->user_session['builder_id']))					));	    $data['project_list']=array();	    if(TRUE === $project_list['status'])		{			$data['project_list'] = $this->Mod_project->build_ci_dropdown_array($project_list['aaData'],'ub_project_id', 'project_name');		}	    //Before Or After Dropdown	    $before_or_after_dropdown[] = array('id' => 'Before','val' => 'Before');	    $before_or_after_dropdown[] = array('id' => 'After','val' => 'After');	    $data['before_or_after_dropdown_list'] = $this->Mod_bid->build_ci_dropdown_array($before_or_after_dropdown,'id', 'val');	    		// Get cost codes		$args['where_clause'] = "builder_id = ".$this->builder_id." || builder_id = 0"; 		$args['select_fields'] = array('ub_cost_variance_code_id','cost_variance_code');		$cost_code_options = $this->Mod_bid->get_db_options(UB_COST_CODE, $args);		$data['cost_code_options'] = $cost_code_options;				// Get Sub contractor list		/*$args_sub['where_clause'] = array('builder_id'=>$this->builder_id);		$args_sub['select_fields'] = array('ub_subcontractor_id', 'company');		$sub_contractor_options = $this->Mod_bid->get_db_option(UB_SUBCONTRACTOR, $args_sub);		$data['sub_contractor_options'] = $sub_contractor_options;		$sub_contractors = $this->Mod_bid->get_db_options(UB_SUBCONTRACTOR, $args_sub);		$data['sub_contractors'] = $sub_contractors;*/				// Get check lists		$args_chk['where_clause'] = array('builder_id'=>$this->builder_id,'project_id'=>$this->project_id);		$args_chk['select_fields'] = array('ub_checklist_id','title');		$checklist_options = $this->Mod_bid->get_db_option(UB_CHECKLIST, $args_chk);		$data['checklist_options'] = $checklist_options;		//echo "<pre>";print_r($checklist_options['']);exit;				// Schedule		$args_schedule['where_clause'] = array('builder_id'=>$this->builder_id,'project_id'=>$this->project_id);		$args_schedule['select_fields'] = array('ub_schedule_id','title');		$schedule_options = $this->Mod_bid->get_db_options(UB_SCHEDULE, $args_schedule);		$data['schedule_options'] = $schedule_options;		$bid_deadline = $this->Mod_builder->get_setup(array(								'select_fields' => array('bid_alert_to_sub_before_deadline'),								'where_clause' => array('builder_id' => $this->user_session['builder_id'])								));		if($bid_deadline['status'] == TRUE)		{			$data['dead_line'] = $bid_deadline['aaData'][0];		}				$this->template->view($data);	}	/** 	 * Bids Class	 * 	 * @package: get_bids	 * @subpackage: get_bids	 * @category: get_bids	 * @author: Gayathri Kalyani 	 * @createdon(DD-MM-YYYY): 09-05-2015 	*/	public function get_bids($page_count = '')	{	        if(!empty($this->project_id))		{			$post_array[] = array(									'field_name' => 'BID.project_id',									'value'=> $this->project_id, 									'type' => '='								);		}		else		{			$post_array[] = array(							'field_name' => 'BID.project_id',							'value'=> $this->users_project_ids, 							'type' => '||',							'classification' => 'primary_ids'						);		}				$post_array[] = array(							'field_name' => 'BID.builder_id',							'value'=> $this->user_session['builder_id'], 							'type' => '='							);			$post_array[] = array(							  'field_name' => 'BID.is_delete',							  'value'=> 'No', 							  'type' => '='							);			$total_count_array =  array();		if(!empty($this->input->post()))		{			// Sanitize input			$result = $this->sanitize_input();			if(TRUE === $result['status'])			{			$search_session_array = array();			  if(isset($result['data']['bid_package_status']) && $result['data']['bid_package_status']!='' && $result['data']['bid_package_status'] != 'null')						 {						$post_array[] = array(								'field_name' => 'BID.status',								'value'=> $result['data']['bid_package_status'], 								'type' => '='							);					 $search_session_array['bid_package_status'] = $result['data']['bid_package_status'];			 }			  if(isset($result['data']['bid_status']) && $result['data']['bid_status']!='' && $result['data']['bid_status'] != 'null')						 {						$post_array[] = array(								'field_name' => 'BID_REQUEST.bid_sub_status',								'value'=>  $result['data']['bid_status'], 								'type' => '='							);					 $search_session_array['bid_status'] = $result['data']['bid_status'];			  }			  if(isset($result['data']['daterange']) && $result['data']['daterange']!='')				{										$formatted_date = explode(" ",$result['data']['daterange']);					 $post_array[] = array(										'field_name' => 'BID.released_date',										'from'=> date("Y-m-d", strtotime($formatted_date[0])),										'to'=> date("Y-m-d", strtotime($formatted_date[2])),										'type' => 'daterange'									      );   						$search_session_array['daterange'] = $result['data']['daterange'];				}				if($page_count == 'result_array')				{				  if(isset($this->uni_session_get('SEARCH')['bid_package_status']) && $this->uni_session_get('SEARCH')['bid_package_status']!='' && $this->uni_session_get('SEARCH') != 'null')				              {						$post_array[] = array(								'field_name' => 'BID.status',								'value'=> $this->uni_session_get('SEARCH')['bid_package_status'], 								'type' => '='							);							      }			      if(isset($this->uni_session_get('SEARCH')['bid_status']) && $this->uni_session_get('SEARCH')['bid_status']!='' && $this->uni_session_get('SEARCH')['bid_status'] != 'null')						      {						$post_array[] = array(								'field_name' => 'BID_REQUEST.bid_sub_status',								'value'=>  $this->uni_session_get('SEARCH')['bid_status'], 								'type' => '='							);					 //$search_session_array['bid_status'] = $result['data']['bid_status'];			      }			      if(isset($this->uni_session_get('SEARCH')['daterange']) && $this->uni_session_get('SEARCH')['daterange']!='')				  {										$formatted_date = explode(" ",$this->uni_session_get('SEARCH')['daterange']);					 $post_array[] = array(										'field_name' => 'BID.released_date',										'from'=> date("Y-m-d", strtotime($formatted_date[0])),										'to'=> date("Y-m-d", strtotime($formatted_date[2])),										'type' => 'daterange'									      );   					//$search_session_array['daterange'] = $result['data']['daterange'];				  }				}				/*					Paggination length stored in seesion code start here				*/				$search_session_array['iDisplayStart'] = isset($result['data']['iDisplayStart'])?$result['data']['iDisplayStart']:$this->uni_session_get('SEARCH')['iDisplayStart'];				$search_session_array['iDisplayLength'] = isset($result['data']['iDisplayLength'])?$result['data']['iDisplayLength']:$this->uni_session_get('SEARCH')['iDisplayLength'];			     // Setting session 				$this->uni_set_session('search', $search_session_array);				// Where clause argument				$where_str = $this->Mod_bid->build_where($post_array);				// Pagination Array				$pagination_array = array();				if(isset($this->uni_session_get('SEARCH')['iDisplayStart']) && isset($this->uni_session_get('SEARCH')['iDisplayLength']))				{					$pagination_array = array( 'iDisplayStart' => $this->uni_session_get('SEARCH')['iDisplayStart'],'iDisplayLength' => $this->uni_session_get('SEARCH')['iDisplayLength'], 'sEcho' => 1);					$total_count_array = $this->Mod_bid->get_bids(array(												'select_fields' => array('COUNT(BID.ub_bid_id) AS total_count'),												'where_clause' => $where_str,												'join'=> array('builder'=>'Yes','bid_request'=>'Yes','cost_code' => '','project'=>'',)												)); 				}				else if(isset($result['data']['iDisplayStart']) && isset($result['data']['iDisplayLength']) && isset($result['data']['sEcho']))				{					$pagination_array = array( 'iDisplayStart' => $result['data']['iDisplayStart'],'iDisplayLength' => $result['data']['iDisplayLength'], 'sEcho' => $result['data']['sEcho']);					$total_count_array = $this->Mod_bid->get_bids(array(												'select_fields' => array('COUNT(BID.ub_bid_id) AS total_count'),												'where_clause' => $where_str,												'join'=> array('builder'=>'Yes','bid_request'=>'Yes','cost_code' => '','project'=>'',)												)); 				}				/*if(isset($result['data']['iDisplayStart']) && isset($result['data']['iDisplayLength']) && isset($result['data']['sEcho']))				{					$pagination_array = array( 'iDisplayStart' => $result['data']['iDisplayStart'],'iDisplayLength' => $result['data']['iDisplayLength'], 'sEcho' => $result['data']['sEcho']);					// Get number of records					 $total_count_array = $this->Mod_bid->get_bids(array(												'select_fields' => array('COUNT(BID.ub_bid_id) AS total_count'),												'where_clause' => $where_str,												'join'=> array('builder'=>'Yes','bid_request'=>'Yes','cost_code' => '','project'=>'',)												)); 				}*/				// print_r($result['data']['sEcho']);				// Order by				$order_by_where = '';				if(isset($result['data']['iSortCol_0']) && $result['data']['iSortCol_0'] >  0)				{					$sort_type = $result['data']['sSortDir_0'];					$sort_filed_column_id = $result['data']['iSortCol_0'];					$dt_filed_name = 'mDataProp_';					$order_by_where = 'BID.'.$result['data'][$dt_filed_name.$sort_filed_column_id].' '.$sort_type;				}				else				{					$order_by_where = 'BID.modified_on DESC';				}			}			else			{				$this->Mod_bid->response($result);			}		}				//$datetime_array = array('BID.due_date_time'=> 'due_date_time');		$date_array = array('BID.due_date_time'=> 'due_date_time');		$datetime_array = array('BID.released_date'=>'released_date');		$query_array = array('select_fields' => array('BID.ub_bid_id','BID.package_title','(select count(BID_REQUEST.bid_id ) FROM (`ub_bid_request` AS BID_REQUEST) where BID_REQUEST.will_bid != "Unknown" AND BID.ub_bid_id = BID_REQUEST.bid_id) AS		responsee_count','(select count(BID_REQUEST.bid_id ) FROM (`ub_bid_request` AS BID_REQUEST) where BID_REQUEST.bid_sub_status = "Accepted" AND BID.ub_bid_id = BID_REQUEST.bid_id) AS accepted_count','BID.due_date_time','BID.status,'.$this->Mod_user->format_user_datetime($date_array,"date"). ','.$this->Mod_user->format_user_datetime($datetime_array)),		'join'=> array('builder'=>'Yes','bid_request'=>'Yes','cost_code' => '','project'=>'',),		'where_clause' => $where_str,		'order_clause' => $order_by_where,		'group_clause' => array("BID.ub_bid_id"),		'pagination' => $pagination_array		);		$result_data = $this->Mod_bid->get_bids($query_array);		if($page_count == 'result_array')		{		  //print_r($result_data);exit;		  return $result_data;		}		unset($query_array['pagination']);		$result_count_array = $this->Mod_bid->get_bids($query_array);		// echo'<pre>';print_r($result_data);exit;		$final_result_data = array();		if(TRUE === $result_data['status'])		{		 foreach($result_data['aaData'] as $key => $val)			{				$post_array_choice = array();				 $post_array_choice[] = array(									 'field_name' => 'UB_BID_REQUEST.bid_id',									 'value'=> $result_data['aaData'][$key]['ub_bid_id'],$result_data['aaData'][$key]['status'],									 'type' => '='								 );	                 // echo '<pre>';print_r($post_array_choice);                 $datetime_array = array('UB_BID_REQUEST.submitted'=>'submitted');				 				 $where_str = $this->Mod_bid->build_where($post_array_choice);					 $query_array = array('select_fields' => array(('SUBCONTRACTOR.company AS sub'),'UB_BID_REQUEST.ub_bid_request_id','UB_BID_REQUEST.bid_id','UB_BID_REQUEST.sub_viewed','UB_BID_REQUEST.bid_amount','UB_BID_REQUEST.bid_sub_status,'.$this->Mod_user->format_user_datetime($datetime_array)),				 'join'=> array('builder'=>'Yes','subcontractor'=>'Yes','project'=>'',),				  'where_clause' => $where_str				  );				 								 $choice = $this->Mod_bid->get_bid_items_list($query_array);				   				 $result_data['aaData'][$key]['bid_items'] = (isset($choice['aaData']))?$choice['aaData']:'';			}					 }		if($result_data['status'] == FALSE)		{			$result_data = array();			$result_data['aaData'] = array();		}		else		{			$result_data['iTotalRecords'] = isset($result_count_array['aaData'])?count($result_count_array['aaData']):'';			$result_data['iTotalDisplayRecords'] = isset($result_count_array['aaData'])?count($result_count_array['aaData']):'';			$result_data['sEcho'] = isset($result['data']['sEcho'])?$result['data']['sEcho']:'';		}		// Response data		$this->Mod_bid->response($result_data);	}		/** 	* Destroy Session	* 	* @method: destroy_session 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: Gayathri Kalyani	*/	public function destroy_session()	{		if(!empty($this->input->post()))		{			// Sanitize input			$result = $this->sanitize_input();			if(TRUE === $result['status'])			{				$result = $this->Mod_bid->destroy_session($result['data']);			}			$this->Mod_bid->response($result);		}		else		{			$response['status'] = FALSE;			$response['message'] = 'Delete Failed: Post array is empty';		}	}	/** 	* Apply Saved Search	* 	* @method: apply_saved_search 	* @access: public 	* @params: 	* @return: array 	* @created by: Gayathri kalyani 	* @created on: 03/04/2015 	* url encoded : 	*/	public function apply_saved_search()	{		/* Apply Filter code starts here */		   $post_array = array( 'builder_id' => $this->user_session['builder_id'],							    'user_id' => $this->user_session['ub_user_id'],							    'module_name' => $this->module		                      );							 		 $result_data = $this->Mod_saved_search->get_saved_search(array(												 'select_fields' => array(),												 'where_clause' => $post_array												 ));		// echo '<pre>';print_r($result_data);								 		if(!empty($this->input->post()))		{			if($result_data['status'] == true)			{				$save_search_id = $result_data['aaData'][0]['ub_saved_search_id'];				$task_array = $this->input->post();				$post_array = array(					'ub_saved_search_id' => $save_search_id,					'search_params' => "'".serialize($task_array)."'"				    );				$response = $this->Mod_saved_search->update_saved_search($post_array);				$this->Mod_saved_search->response($response);				// echo '<pre>';print_r($post_array);			}						else			{				$task_array = $this->input->post();				$post_array = array(					'search_params' => "'".serialize($task_array)."'"				);				$response = $this->Mod_saved_search->update_saved_search($post_array);				$this->Mod_saved_search->response($response);				// echo '<pre>';print_r($response);exit;			}		}		else	{		 $serialized_data = $result_data['aaData'][0]['search_params'];		  // echo '<pre>';print_r($result_data);exit;		 $remove_single_quote = str_replace("'", '', $serialized_data);		 $unserialized_data = unserialize($remove_single_quote);		 $result_data['aaData'][0]['search_params'] = $unserialized_data;		 if(!empty($unserialized_data))		{				if(!empty($unserialized_data['bid_package_status']))				{					// Set value in session					$search_session_array['bid_package_status'] = $unserialized_data['bid_package_status'];				}				if(!empty($unserialized_data['bid_status']))				{					// Set value in session					$search_session_array['bid_status'] = $unserialized_data['bid_status'];				}				if(!empty($unserialized_data['daterange']))				{					// Set value in session					$search_session_array['daterange'] = $unserialized_data['daterange'];				}								// Setting session 								 $this->uni_set_session('search', $search_session_array);								// Response data				$this->Mod_bid->response($result_data);		}	}}					public function bid_request_list()    {    	$this->module = 'BIDREQUEST';        $data = array(        'title'        => "BIDS",        'content'      => 'content/bids/bidrequest_list',        'page_id'      => 'bids',        'bids_list'       => 'bids_list',        'data_table'   => 'data_table',        'search_session_array' => $this->uni_session_get('SEARCH'),        'date_all'       => 'date_all'        );        //echo "sasadhsfh";exit;        //Get category from general value table        $packagestatus_args = array('classification'=>'bid_package_status', 'where_clause' => '("int01" = 0 OR "int01" = '.$this->user_session['builder_id'].')', 'type'=>'dropdown');        $packagestatus_result = $this->Mod_general_value->get_general_value($packagestatus_args);        $data['packagestatus_array'] = $packagestatus_result['values'];        //Get Locations from general value table        $bidstatus_args = array('classification'=>'bid_status', 'where_clause' => '("int01" = 0 OR "int01" = '.$this->user_session['builder_id'].')', 'type'=>'dropdown');        $bidstatus_result = $this->Mod_general_value->get_general_value($bidstatus_args);        $data['bidstatus_array'] = $bidstatus_result['values'];      //Apply filter code        $post_array = array( 'builder_id' => $this->user_session['builder_id'],                             'user_id' => $this->user_session['ub_user_id'],                             'module_name' => $this->module         );        $result_data = $this->Mod_saved_search->get_saved_search(array(                                                 'select_fields' => array(),                                                 'where_clause' => $post_array                                                 ));        if($result_data['status'] == true)        {            $apply_filter = true;        }else        {            $apply_filter = false;;        }        $data['apply_filter'] = $apply_filter;        $this->template->view($data);    }	 /*	* save/update rfi	* @method: save_rfi 	* @access: public 	* @param:  	* @return:  response array	* url encoded : Ymlkcy9zYXZlX2JpZC8-	*/	public function save_rfi()	{	  if(!empty($this->input->post()))	   {		 //Sanitize input		  $result = $this->sanitize_input();		  if(TRUE === $result['status'])		  {		  			  	if($result['data']['ub_bid_rfi_ve_id'] > 0)		  	{		  		if(isset($result['data']['deadline']) && $result['data']['deadline'] !='')			    {			      $result['data']['deadline'] = date("Y-m-d", strtotime($result['data']['deadline']));			    }			    else			    {				 $result['data']['deadline'] = '';			    }			    $assign_to = $this->Mod_bid->get_rfi_ve(array(									'select_fields' => array('BID_RFI_VE.assign_to_ids','BID_RFI_VE.deadline','BID_RFI_VE.visible_to_subs'),									'join'=> array('user'=>'Yes','owner'=>'Yes','sub'=>'Yes'),									'where_clause' => array('BID_RFI_VE.ub_bid_rfi_ve_id'=> $result['data']['ub_bid_rfi_ve_id'])));			    if($this->user_account_type == BUILDERADMIN)			    {				  $deadline = $result['data']['deadline'];				  $assign_to = $result['data']['assign_to_ids'];				  $visible_to_subs = isset($result['data']['visible_to_subs']) ? "Yes" : "No";			    }			    else if($this->user_account_type == SUBCONTRACTOR)			    {				  $deadline = $assign_to['aaData'][0]['deadline'];				  $assign_to = $assign_to['aaData'][0]['assign_to_ids'];				  $visible_to_subs = $assign_to['aaData'][0]['visible_to_subs'];			    }		  		$rfi_update_array = array(		  		'ub_bid_rfi_ve_id' => $result['data']['ub_bid_rfi_ve_id'],			  	'builder_id' => $this->user_session['builder_id'],			  	'project_id' => $result['data']['project_id'],			  	'bid_id' => $result['data']['ub_bid_id'],			  	'rfi_ve_type' => 'RFI',			  	'question' => $result['data']['question'],			  	'answer' => $result['data']['answer'],			  	'deadline' => $deadline,			  	'assign_to_ids' => $assign_to,			  	'visible_to_subs' => $visible_to_subs,	            'modified_by' => $this->user_session['ub_user_id'], 	            'modified_on' => TODAY,);	            $bid_pakage_array = array(               'project_name' => $result['data']['project_name'],               'package_title' => $result['data']['package_title'],               'question_by' => $result['data']['question_by'],		  		);				// insert the record				$response = $this->Mod_bid->update_rfi_ve($rfi_update_array,$bid_pakage_array);			    		  	}		  	else{		  	if(isset($result['data']['deadline']) && $result['data']['deadline'] !='')			{			  $result['data']['deadline'] = date("Y-m-d", strtotime($result['data']['deadline']));			}			else			{				$result['data']['deadline'] = '';			}			if($this->user_account_type == BUILDERADMIN)			{				$assign_to_ids = $result['data']['assign_to_ids'];			}			else if($this->user_account_type == SUBCONTRACTOR)			{				$assign_to_ids = $this->user_session['ub_user_id'];			}		  	$rfi_insert_array = array(			  	'builder_id' => $this->user_session['builder_id'],			  	'project_id' => $result['data']['project_id'],			  	'bid_id' => $result['data']['ub_bid_id'],			  	'rfi_ve_type' => 'RFI',			  	'question' => $result['data']['question'],			  	'answer' => $result['data']['answer'],			  	'deadline' => $result['data']['deadline'],			  	'assign_to_ids' => $assign_to_ids,			  	'visible_to_subs' => isset($result['data']['visible_to_subs']) ? "Yes" : "No",			  	'created_by' => $this->user_session['ub_user_id'],	            'created_on' => TODAY,	            'modified_by' => $this->user_session['ub_user_id'], 	            'modified_on' => TODAY,	            );		  	//print_r($rfi_insert_array);exit;		  	$bid_pakage_array = array(               'project_name' => $result['data']['project_name'],               'package_title' => $result['data']['package_title'],		  		);		  					// insert the record				$response = $this->Mod_bid->add_rfi_ve($rfi_insert_array,$bid_pakage_array);			    		  }		}		$this->Mod_bid->response($response);	   }    }    /*	* save/update ve	* @method: save_rfi 	* @access: public 	* @param:  	* @return:  response array	* url encoded : Ymlkcy9zYXZlX2JpZC8-	*/	public function save_ve()	{	  if(!empty($this->input->post()))	   {		 //Sanitize input		  $result = $this->sanitize_input();		  if(TRUE === $result['status'])		  {		  	if($result['data']['rfi_ve_id'] > 0)		  	{		  		$assign_to = $this->Mod_bid->get_rfi_ve(array(									'select_fields' => array('BID_RFI_VE.assign_to_ids','BID_RFI_VE.visible_to_subs'),									'join'=> array('user'=>'Yes','owner'=>'Yes','sub'=>'Yes'),									'where_clause' => array('BID_RFI_VE.ub_bid_rfi_ve_id'=> $result['data']['rfi_ve_id'])));		  		if($this->user_account_type == BUILDERADMIN)			    {				  //$deadline = $result['data']['deadline'];			      $assign_to = $result['data']['assign_to_ids'];				  $visible_to_subs = isset($result['data']['visible_to_subs']) ? "Yes" : "No";			    }			    else if($this->user_account_type == SUBCONTRACTOR)			    {				  //$deadline = $assign_to['aaData'][0]['deadline'];				  $visible_to_subs = $assign_to['aaData'][0]['visible_to_subs'];				  $assign_to = $assign_to['aaData'][0]['assign_to_ids'];			    }		  		$ve_update_array = array(		  		'ub_bid_rfi_ve_id' => $result['data']['rfi_ve_id'],			  	'builder_id' => $this->user_session['builder_id'],			  	'project_id' => $result['data']['project_id'],			  	'bid_id' => $result['data']['ub_bid_id'],			  	'rfi_ve_type' => 'VE',			  	'question' => $result['data']['ve_question'],			  	'answer' => $result['data']['ve_answer'],			  	'assign_to_ids' => $assign_to,			  	'visible_to_subs' => $visible_to_subs,	            'modified_by' => $this->user_session['ub_user_id'], 	            'modified_on' => TODAY,);	            $bid_pakage_array = array(               'project_name' => $result['data']['project_name'],               'package_title' => $result['data']['package_title'],               'question_by' => $result['data']['ve_question_by'],		  		);				// insert the record				$response = $this->Mod_bid->update_rfi_ve($ve_update_array,$bid_pakage_array);			    		  	}		  	else{		  	if(isset($result['data']['ve_deadline']) && $result['data']['ve_deadline'] !='')			{			  $result['data']['ve_deadline'] = date("Y-m-d", strtotime($result['data']['ve_deadline']));			}			else			{				$result['data']['ve_deadline'] = '';			}			if($this->user_account_type == BUILDERADMIN)		    {			   $assign_to_ids = $result['data']['ve_assign_to_ids'];		    }		    else if($this->user_account_type == SUBCONTRACTOR)		    {			 $assign_to_ids = $this->user_session['ub_user_id'];		    }		  	$ve_insert_array = array(			  	'builder_id' => $this->user_session['builder_id'],			  	'project_id' => $result['data']['project_id'],			  	'bid_id' => $result['data']['ub_bid_id'],			  	'rfi_ve_type' => 'VE',			  	'question' => $result['data']['ve_question'],			  	'answer' => $result['data']['ve_answer'],			  	'deadline' => $result['data']['ve_deadline'],			  	'assign_to_ids' => $assign_to_ids,			  	'visible_to_subs' => isset($result['data']['ve_visible_to_subs']) ? "Yes" : "No",	            'created_by' => $this->user_session['ub_user_id'],	            'created_on' => TODAY,	            'modified_by' => $this->user_session['ub_user_id'], 	            'modified_on' => TODAY,	             );		  	 $bid_pakage_array = array(               'project_name' => $result['data']['project_name'],               'package_title' => $result['data']['package_title'],		  		);				// insert the record				$response = $this->Mod_bid->add_rfi_ve($ve_insert_array,$bid_pakage_array);			    $this->Mod_bid->response($response);		  }		 }		 $this->Mod_bid->response($response);	   }    } /*	* Get rfi	* @method: get_rfi 	* @access: public 	* @param:  	* @return:  response array	* url encoded : Ymlkcy9zYXZlX2JpZC8-	*/	public function get_rfi_ve()	{		if(!empty($this->input->post()))	   {		 //Sanitize input		  $result = $this->sanitize_input();		  if(TRUE === $result['status'])		  {	            $datetime_array = array('BID_RFI_VE.created_on'=>'rfi_ve_created_on');			$rfi_data = $this->Mod_bid->get_rfi_ve(array(									'select_fields' => array('CONCAT_WS(" ",SUBCONTRACTOR.first_name,SUBCONTRACTOR.last_name) AS company','BID_RFI_VE.created_by','BID_RFI_VE.ub_bid_rfi_ve_id','BID_RFI_VE.question','BID_RFI_VE.answer','BID_RFI_VE.assign_to_ids','BID_RFI_VE.visible_to_subs','USER.first_name','BID_RFI_VE.deadline,'.$this->Mod_user->format_user_datetime($datetime_array)),									'join'=> array('user'=>'Yes','owner'=>'Yes','sub'=>'Yes'),									'where_clause' => array('BID_RFI_VE.ub_bid_rfi_ve_id'=> $result['data']['ub_bid_rfi_ve_id'])));			if(isset($rfi_data['aaData']))			{				$data['rfi_data'] = $rfi_data['aaData'];			}else{			$data['rfi_data'] = false;			}			$data['question_by'] = $rfi_data['aaData'][0]['created_by'];			$data['question'] = $rfi_data['aaData'][0]['question'];			$data['answer'] = $rfi_data['aaData'][0]['answer'];			$data['deadline'] = date("m/d/Y", strtotime($rfi_data['aaData'][0]['deadline']));			$data['assign_to_ids'] = $rfi_data['aaData'][0]['assign_to_ids'];			$data['visible_to_subs'] = $rfi_data['aaData'][0]['visible_to_subs'];			$data['assigned'] = $rfi_data['aaData'][0]['company'];			$data['created_by'] = $rfi_data['aaData'][0]['created_by'];			$data['status'] = TRUE;			//print_r($data);			$this->Mod_bid->response($data);					}	  }	}    /*	* sava and edit bides for subcontractor	* @method: ubmit_bids_request 	* @access: public 	* @param:  	* @return:  response array	* url encoded : Ymlkcy9zdWJtaXRfYmlkc19yZXF1ZXN0Lw--	*/	public function submit_bids_request($ub_bidrequest_id = 0)	{ 	    	    $data = array(		'title'        => "UNIBUILDER",				'content'      => 'content/bids/bid_subcontractor',        'page_id'      => 'bids',		'bids_list'	   => 'bids_list',		'data_table'   => 'data_table',		'date_all'	   => 'date_all'      		);		$results = $this->sanitize_input();		//print_r($results);exit;				/* file upload code starts here */		//get project id from task table // by satheesh kumar		if(empty($this->project_id) && $ub_bidrequest_id > 0)		{		$where_args = array('ub_bid_request_id' => $ub_bidrequest_id);		$project_id = $this->Mod_project->get_project_id(UB_BID_REQUEST,$where_args);		$this->project_id = $project_id['aaData'][0]['project_id'];		}		//end code for get project id				$get_folder_id = array('select_fields' => array('ub_doc_folder_id'),                               'where_clause' => (array('builder_id' =>  $this->user_session['builder_id'],'project_id' => $this->project_id,'ui_folder_name' => $this->module))                               );		$all_folder = $this->Mod_doc->get_folder_id($get_folder_id);		if (isset($all_folder['aaData']) && !empty($all_folder)) 		{				$data['folder_id'] = $all_folder['aaData']['0']['ub_doc_folder_id'];		}		/*code to create the temp dir and pass it to view*/		$dir_response = $this->Mod_doc->create_default_dir();		if ($dir_response['status'] == TRUE) 		{			$data['temprory_dir_id'] = $dir_response['temp_directory_id'];		}		else		{			$data['temprory_dir_id'] = '1';		}		/* -- file upload codes ends here */		/*Code for update file */		$this->ub_bidrequest_id = (isset($results['data']['ub_bid_request_id']))?$results['data']['ub_bid_request_id']: $ub_bidrequest_id;		$task_data = array(	  'flag' => 1, 							  'builder_id'	=> $this->user_session['builder_id'],							  'projectid' => $this->project_id,							  'folderid' => 0,							  'modulename' => $this->module,							  'moduleid' => $this->ub_bidrequest_id,							);		// echo '<pre>';print_r($task_data);		$result_array = $this->Mod_doc->get_files_for_folder($task_data);		// echo '<pre>';print_r($result_array);exit;		$count = count($result_array);		$session_id = $this->session->userdata('session_id');			for ($i=0; $i < $count ; $i++)		{			if(isset($result_array[$i]['system_file_name']) && !empty($result_array[$i]['system_file_name']))			{				$exp = explode('/', DOC_PATH.$result_array[$i]['system_file_name']);								$thumb_array = array(											'source_image' => DOC_PATH.$result_array[$i]['system_file_name'],											'new_image' => DOC_TEMP_PATH.$session_id.'/'.$dir_response['thumbnail_path'].'/'.$exp[count($exp)-1]									);				$this->create_thumb($thumb_array);								copy(DOC_PATH.$result_array[$i]['system_file_name'],DOC_TEMP_PATH.$session_id.'/'.$dir_response['temp_directory_id'].'/'.$exp[count($exp)-1]);			}		}		/*End Code for edit file */						//echo "<pre>" ; print_r($results);exit;		if(!empty($this->input->post()))		{		/* $results = $this->sanitize_input(); */		if(isset($results['data']['pricing_format']) && $results['data']['pricing_format'] == 'Flat Fee')		{			$result['data']['builder_id'] = $this->user_session['builder_id'] ;	 		$result['data']['ub_bid_request_id'] = $results['data']['ub_bid_request_id'] ;              $result['data']['bid_amount'] = $results['data']['flatt_fee_amount'] ;             $result['data']['sub_notes'] = isset($results['data']['sub_notes'])?$results['data']['sub_notes']:'' ;             $result['data']['submitted'] =  TODAY;            $result['data']['bid_sub_status'] = 'Submitted' ; 	        $result['data']['will_bid'] =	'Yes' ;				$result['data']['modified_on'] = TODAY;			$result['data']['modified_by'] = $this->user_session['ub_user_id'];			$args['data']['package_name'] = $results['data']['package_name'];			$args['data']['project_name'] = $results['data']['project_name'];			$args['data']['project_id'] = $results['data']['project_id'];			$response = $this->Mod_bid->update_bid_request($result['data'],$args['data']);			$this->Mod_bid->response($response);		}		else{						$cost_code = $results['data']['costcode'] ;				$cost_code_description = $results['data']['cost_code_description'] ;						if(count($cost_code >= 1))			{			  $count_description = 0 ;				foreach ($cost_code as $key=>$value)				{				  $costdata['data']['builder_id'] = $this->user_session['builder_id'] ;				  $costdata['data']['project_id'] = $results['data']['project_id'] ;				  $costdata['data']['bid_id'] = $results['data']['ub_bid_id'] ;				  $costdata['data']['bid_request_id'] = $results['data']['ub_bid_request_id'] ;  				  $costdata['data']['cost_code_id'] = $key ;				  $costdata['data']['bid_amount'] = $value ;				  $costdata['data']['cost_code_description'] = $cost_code_description[$count_description] ;				  $costdata['data']['created_on'] = TODAY;				  $costdata['data']['created_by'] = $this->user_session['ub_user_id'];				  $costdata['data']['modified_on'] = TODAY;				  $costdata['data']['modified_by'] = $this->user_session['ub_user_id'];				  				  $sub_cost_code = $this->Mod_bid->add_sub_cost_code($costdata['data']);				  //$this->Mod_bid->response($sub_cost_code);				  $count_description++ ;				}			}		//echo "<pre>" ; print_r($costdata['data']);exit;				// Update Bid_request Value			$result['data']['builder_id'] = $this->user_session['builder_id'] ;	 		$result['data']['ub_bid_request_id'] = $results['data']['ub_bid_request_id'] ;              $result['data']['bid_amount'] = $results['data']['bid_amount'] ;             $result['data']['sub_notes'] = isset($results['data']['sub_notes'])?$results['data']['sub_notes']:'' ;             $result['data']['submitted'] =  TODAY;            $result['data']['bid_sub_status'] = 'Submitted' ; 	        $result['data']['will_bid'] =	'Yes' ;				$result['data']['modified_on'] = TODAY;			$result['data']['modified_by'] = $this->user_session['ub_user_id'];			$args['data']['package_name'] = $results['data']['package_name'];			$args['data']['project_name'] = $results['data']['project_name'];			$args['data']['project_id'] = $results['data']['project_id'];			$response = $this->Mod_bid->update_bid_request($result['data'],$args['data']);			$this->Mod_bid->response($response);				        }}       else        {	   		$date_array = array('BID.due_date'=>'due_date');		$releasedate_array = array('BID.released_date'=>'released_date'); 		$viewed_on_array = array('BID_REQUEST.viewed_on'=>'viewed_on'); 		$query_array=array('select_fields'=>array('BID_REQUEST.ub_bid_request_id,'.		$this->Mod_user->format_user_datetime($viewed_on_array,'date').		',BID_REQUEST.will_bid',		'BID_REQUEST.sub_notes',		'BID_REQUEST.submitted',		'BID_REQUEST.bid_amount',		'BID_REQUEST.bid_sub_status',		'BID.ub_bid_id','BID.package_title,'.		$this->Mod_user->format_user_datetime($releasedate_array,'date').','.		$this->Mod_user->format_user_datetime($date_array,'date').		',BID.description',		'BID.checklist_id',		'PROJECT.project_name','BID.project_id','BID.ub_bid_id','BID.builder_id','BID.pricing_format'),		'join'=>array('project'=>'Yes','checklist'=>'Yes','bid'=>'yes', 'sub' => ''),	    'where_clause' => array('BID_REQUEST.ub_bid_request_id'=> $ub_bidrequest_id),        );		$result_data=$this->Mod_bid->get_bidrequest($query_array);		  if($result_data['aaData'][0]['viewed_on'] == 0)		 {		     $result['ub_bid_request_id'] = $ub_bidrequest_id ;		     $result['viewed_on'] =  TODAY;				 $result['sub_viewed'] =  'Yes';			 $response = $this->Mod_bid->update_bid_request($result); 		 } 	            if(isset($result_data['aaData'][0]['checklist_id']))		{		$checklist_id=explode(",",$result_data['aaData'][0]['checklist_id']);							   foreach($checklist_id as $value)			   {								 $assign_post_array = '' ;				 $checklist_array = array('select_fields' => array(				 'CHECKLIST.ub_checklist_id',				 'CHECKLIST.title',                 'CHECKLIST.tags',                 'CHECKLIST.category',                 'CHECKLIST.description AS checklist_desc',),				 'where_clause' => array('CHECKLIST.ub_checklist_id'=> $value),			     );							$resultdata[] = $this->Mod_bid->get_checklist_details($checklist_array);				$checklist_data = array(	  'flag' => 1, 								  'builder_id'	=> $this->user_session['builder_id'],								  'projectid' => $this->project_id,								  'folderid' => 0,								  'modulename' => 'checklist',								  'moduleid' => $value,								);			    $result_file[] = $this->Mod_doc->get_files_for_folder($checklist_data);			}				 $result_data['checklist'] = $resultdata ;		 $result_data['file'] =  $result_file ;		 			}         if($result_data['aaData'][0]['bid_sub_status'] == 'Released')		 {		  $costcode_array = array('select_fields' => array(		                     'BID_COST_CODE.cost_code_id',							 'BID_COST_CODE.cost_code_description',                             'VARIANCE_CODE.cost_variance_code'),							 'join'=>array('variance_code'=>'Yes'),							 'where_clause' => array('BID_COST_CODE.bid_id'=> $result_data['aaData'][0]['ub_bid_id']),							 );								  $costcode_result = $this->Mod_bid->get_cost_variance_code($costcode_array);		 }		 else		 {		 	$costcode_array = array('select_fields' => array(		                     'BID_SUB_COST_CODE.cost_code_id',		                     'BID_SUB_COST_CODE.cost_code_description',		                     'BID_SUB_COST_CODE.bid_amount',		                     'VARIANCE_CODE.cost_variance_code'),							 'join'=>array('variance_code'=>'Yes','cost_code'=>'Yes'),							 'where_clause' => array('BID_SUB_COST_CODE.bid_id'=> $result_data['aaData'][0]['ub_bid_id'],'BID_SUB_COST_CODE.bid_request_id'=> $ub_bidrequest_id),							 );								     $costcode_result = $this->Mod_bid->get_bid_sub_cost_code($costcode_array);		 }			          $result_data['variance'] = $costcode_result ;			     //echo "<pre>"; print_r($result_data); exit;			    $data['result_data']  = $result_data;			    // Get Sub contractor list		$args['where_clause'] = array('builder_id'=>$this->builder_id);		$args['select_fields'] = array('ub_subcontractor_id', 'company');		$sub_contractor_options = $this->Mod_bid->get_db_options(UB_SUBCONTRACTOR, $args);		$data['sub_contractor_options'] = $sub_contractor_options;		$sub_contractors = $this->Mod_bid->get_db_options(UB_SUBCONTRACTOR, $args);		$data['sub_contractors'] = $sub_contractors;		//Get all comments list from ub_daily_log_comments table with the builder_id			$datetime_array = array('COMMENT.created_on'=>'comment_created_on');			$comments_list = $this->Mod_comment->get_comment(array(									'select_fields' => array('USER.account_type','COMMENT.comments','COMMENT.created_by','USER.first_name','COMMENT.show_owner','COMMENT.show_sub','COMMENT.created_on','COMMENT.ub_comments_id,'.$this->Mod_user->format_user_datetime($datetime_array)),									'join'=> array('user'=>'Yes','project'=>'Yes','builder'=>'Yes'),									'where_clause' => array('COMMENT.module_pk_id'=> $ub_bidrequest_id,'COMMENT.module_name' => $this->module),									'order_clause' => 'COMMENT.ub_comments_id desc'													));			if(isset($comments_list['aaData']))			{				$data['comments_list'] = $comments_list['aaData'];			}else{			$data['comments_list'] = false;			}					}				$this->template->view($data);	}     public function decline_bids_request()	{       if(!empty($this->input->post()))		{		   $results = $this->sanitize_input();		    $result['data']['builder_id'] = $this->user_session['builder_id'] ;	 		$result['data']['ub_bid_request_id'] = $results['data']['ub_bid_request_id'] ;              $result['data']['bid_amount'] = $results['data']['bid_amount'] ;             $result['data']['sub_notes'] = $results['data']['sub_notes'] ; 			$result['data']['bid_sub_status'] = 'Declined' ;            $result['data']['will_bid'] =	'No' ;				            $result['data']['submitted'] =  TODAY;						$result['data']['modified_on'] = TODAY;			$result['data']['modified_by'] = $this->user_session['ub_user_id'];			$args['data']['package_name'] = $results['data']['package_name'];			$args['data']['project_name'] = $results['data']['project_name'];			$args['data']['project_id'] = $results['data']['project_id'];			$response = $this->Mod_bid->update_bid_request($result['data'],$args['data']);			$this->Mod_bid->response($response);		}			}	/*	* search rfi	* @method: search_rfi 	* @access: public 	* @param:  	* @return:  response array	* url encoded : Ymlkcy9zYXZlX2JpZC8-	*/	public function search_rfi()	{				if(!empty($this->input->post()))	   {		 //Sanitize input		  $result = $this->sanitize_input();		  if(TRUE === $result['status'])		  {	                      $post_array[] = array(									'field_name' => 'BID_RFI_VE.bid_id',									'value'=> $result['data']['ub_bid_id'], 									'type' => '='									);           $post_array[] = array(									'field_name' => 'BID_RFI_VE.rfi_ve_type',									'value'=> 'RFI', 									'type' => '='									);                        if($result['data']['search_param'] == 'asked_by_me')            {            	            	$post_array[] = array(									'field_name' => 'BID_RFI_VE.created_by',									'value'=> $this->user_session['ub_user_id'], 									'type' => '='									);            }            if($result['data']['search_param'] == 'assigned_to_me')            {            	            	$post_array[] = array(									'field_name' => 'BID_RFI_VE.assign_to_ids',									'value'=> $this->user_session['ub_user_id'], 									'type' => '='									);            }            if($result['data']['search_param'] == 'answered')            {	            	$post_array[] = array(									'field_name' => 'BID_RFI_VE.answer',									'value'=> '', 									'type' => '!='									);            }            if($result['data']['search_param'] == 'unaswered')            {	            	$post_array[] = array(									'field_name' => 'BID_RFI_VE.answer',									'value'=> '', 									'type' => '='									);            }            $other_where = '';			if($this->user_account_type == SUBCONTRACTOR)			{			$other_where = ' AND (BID_RFI_VE.assign_to_ids = '.$this->user_session['ub_user_id'].' || BID_RFI_VE.visible_to_subs = "Yes" || BID_RFI_VE.created_by = '.$this->user_session['ub_user_id'].') ';					}                        $where_str = $this->Mod_bid->build_where($post_array);            if($other_where != '')			{				$where_str = $where_str.$other_where;			}			$date_array = array('BID_RFI_VE.deadline'=>'deadline');            $datetime_array = array('BID_RFI_VE.created_on'=>'rfi_ve_created_on','BID_RFI_VE.modified_on'=>'rfi_ve_modified_on');            $rfi_search_list = $this->Mod_bid->get_rfi_ve(array(									'select_fields' => array('BID_RFI_VE.created_by','CONCAT_WS(" ",SUBCONTRACTOR.first_name,SUBCONTRACTOR.last_name) AS subcontractor_name','BID_RFI_VE.ub_bid_rfi_ve_id','BID_RFI_VE.question','BID_RFI_VE.answer','BID_RFI_VE.assign_to_ids','BID_RFI_VE.visible_to_subs','USER.first_name','(OWNER.first_name) AS modified_by,'.$this->Mod_user->format_user_datetime($date_array,"date"). ','.$this->Mod_user->format_user_datetime($datetime_array)),									'join'=> array('user'=>'Yes','owner'=>'Yes','sub'=>'Yes'),									'where_clause' => $where_str,									'order_clause' => 'BID_RFI_VE.modified_on desc'													));            //print_r($rfi_list);			if(isset($rfi_search_list['aaData']))			{				$data['rfi_search_list'] = $rfi_search_list['aaData'];				$data['img'] = IMAGESRC . "strip.gif";	            $data['session'] = $this->user_session['ub_user_id'];	            $data['created'] = $this->user_id;	            $data['status'] = TRUE;			}else{			$data['rfi_search_list'] = false;			$data['status'] = FALSE;			}			//all rfi for this bid			$other_all_rfi_where = '';			$all_rfi_where_array[] = array(								'field_name' => 'BID_RFI_VE.bid_id',								'value'=> $result['data']['ub_bid_id'], 								'type' => '='							);			$all_rfi_where_array[] = array(								'field_name' => 'BID_RFI_VE.rfi_ve_type',								'value'=> 'RFI', 								'type' => '='							);			if($this->user_account_type == SUBCONTRACTOR)			{							$other_all_rfi_where = ' AND (BID_RFI_VE.assign_to_ids = '.$this->user_session['ub_user_id'].' || BID_RFI_VE.visible_to_subs = "Yes" || BID_RFI_VE.created_by = '.$this->user_id.') ';			}			$all_rfi_where = $this->Mod_bid->build_where($all_rfi_where_array);            if($other_all_rfi_where != '')			{				$all_rfi_where = $all_rfi_where.$other_all_rfi_where;			}			$all_rfi = $this->Mod_bid->get_rfi_ve(array(									'select_fields' => array('COUNT(BID_RFI_VE.ub_bid_rfi_ve_id) AS all_rfi'),									'where_clause' => $all_rfi_where,								    ));			if(isset($all_rfi['aaData']))			{				$data['all_rfi'] = $all_rfi['aaData'];			}else{			$data['all_rfi'] = false;			}			//rfi created by me			$rfi_created_by_me = $this->Mod_bid->get_rfi_ve(array(									'select_fields' => array('COUNT(BID_RFI_VE.created_by) AS asked_by_me'),									'where_clause' => array('BID_RFI_VE.bid_id'=> $result['data']['ub_bid_id'], 'BID_RFI_VE.rfi_ve_type'=> 'RFI','BID_RFI_VE.created_by' => $this->user_session['ub_user_id']),								    ));			if(isset($rfi_created_by_me['aaData']))			{				$data['rfi_created_by_me'] = $rfi_created_by_me['aaData'];			}else{			$data['rfi_created_by_me'] = false;			}			//rfi assigned to me			$rfi_asign_to_me = $this->Mod_bid->get_rfi_ve(array(									'select_fields' => array('COUNT(BID_RFI_VE.assign_to_ids) AS assigned_to_me'),									'where_clause' => array('BID_RFI_VE.bid_id'=> $result['data']['ub_bid_id'], 'BID_RFI_VE.rfi_ve_type'=> 'RFI','BID_RFI_VE.assign_to_ids' => $this->user_session['ub_user_id']),								    ));			if(isset($rfi_asign_to_me['aaData']))			{				$data['rfi_asign_to_me'] = $rfi_asign_to_me['aaData'];			}else{			$data['rfi_asign_to_me'] = false;			}			//rfi unanswered			$other_unaswered_where = '';			$all_unaswered_array[] = array(								'field_name' => 'BID_RFI_VE.bid_id',								'value'=> $result['data']['ub_bid_id'], 								'type' => '='							);			$all_unaswered_array[] = array(								'field_name' => 'BID_RFI_VE.rfi_ve_type',								'value'=> 'RFI', 								'type' => '='							);			$all_unaswered_array[] = array(								'field_name' => 'BID_RFI_VE.answer',								'value'=> '', 								'type' => '='							);			if($this->user_account_type == SUBCONTRACTOR)			{							$other_unaswered_where = ' AND (BID_RFI_VE.assign_to_ids = '.$this->user_session['ub_user_id'].' || BID_RFI_VE.visible_to_subs = "Yes" || BID_RFI_VE.created_by = '.$this->user_id.') ';			}			$unaswered_where = $this->Mod_bid->build_where($all_unaswered_array);            if($other_unaswered_where != '')			{				$unaswered_where = $unaswered_where.$other_unaswered_where;			}			//print_r($unaswered_where);exit;			$rfi_unanswered = $this->Mod_bid->get_rfi_ve(array(									'select_fields' => array('COUNT(BID_RFI_VE.answer) AS answer'),									'where_clause' => $unaswered_where,								    ));			if(isset($rfi_unanswered['aaData']))			{				$data['rfi_unanswered'] = $rfi_unanswered['aaData'];			}else{			$data['rfi_unanswered'] = false;			}		  }	  }	  $this->Mod_bid->response($data);	  	}	/*	* search ve	* @method: search_ve	* @access: public 	* @param:  	* @return:  response array	* url encoded : Ymlkcy9zYXZlX2JpZC8-	*/	public function search_ve()	{				if(!empty($this->input->post()))	   {		 //Sanitize input		  $result = $this->sanitize_input();		  if(TRUE === $result['status'])		  {	                      $post_array[] = array(									'field_name' => 'BID_RFI_VE.bid_id',									'value'=> $result['data']['ub_bid_id'], 									'type' => '='									);           $post_array[] = array(									'field_name' => 'BID_RFI_VE.rfi_ve_type',									'value'=> 'VE', 									'type' => '='									);                        if($result['data']['search_param'] == 've_asked_by_me')            {            	            	$post_array[] = array(									'field_name' => 'BID_RFI_VE.created_by',									'value'=> $this->user_session['ub_user_id'], 									'type' => '='									);            }            if($result['data']['search_param'] == 've_assigned_to_me')            {            	            	$post_array[] = array(									'field_name' => 'BID_RFI_VE.assign_to_ids',									'value'=> $this->user_session['ub_user_id'], 									'type' => '='									);            }            if($result['data']['search_param'] == 've_answered')            {	            	$post_array[] = array(									'field_name' => 'BID_RFI_VE.answer',									'value'=> '', 									'type' => '!='									);            }            if($result['data']['search_param'] == 've_unaswered')            {	            	$post_array[] = array(									'field_name' => 'BID_RFI_VE.answer',									'value'=> '', 									'type' => '='									);            }            $other_where = '';			if($this->user_account_type == SUBCONTRACTOR)			{			$other_where = ' AND (BID_RFI_VE.assign_to_ids = '.$this->user_session['ub_user_id'].' || BID_RFI_VE.visible_to_subs = "Yes" || BID_RFI_VE.created_by = '.$this->user_session['ub_user_id'].') ';					}                        $where_str = $this->Mod_bid->build_where($post_array);            if($other_where != '')			{				$where_str = $where_str.$other_where;			}			$date_array = array('BID_RFI_VE.deadline'=>'deadline');            $datetime_array = array('BID_RFI_VE.created_on'=>'rfi_ve_created_on','BID_RFI_VE.modified_on'=>'rfi_ve_modified_on');            $ve_search_list = $this->Mod_bid->get_rfi_ve(array(									'select_fields' => array('BID_RFI_VE.created_by','CONCAT_WS(" ",SUBCONTRACTOR.first_name,SUBCONTRACTOR.last_name) AS subcontractor_name','BID_RFI_VE.ub_bid_rfi_ve_id','BID_RFI_VE.question','BID_RFI_VE.answer','BID_RFI_VE.assign_to_ids','BID_RFI_VE.visible_to_subs','USER.first_name','(OWNER.first_name) AS modified_by,'.$this->Mod_user->format_user_datetime($date_array,"date"). ','.$this->Mod_user->format_user_datetime($datetime_array)),									'join'=> array('user'=>'Yes','owner'=>'Yes','sub'=>'Yes'),									'where_clause' => $where_str,									'order_clause' => 'BID_RFI_VE.modified_on desc'													));            //print_r($rfi_list);			if(isset($ve_search_list['aaData']))			{				$data['ve_search_list'] = $ve_search_list['aaData'];				$data['img'] = IMAGESRC . "strip.gif";	            $data['session'] = $this->user_session['ub_user_id'];	            $data['created'] = $this->user_id;	            $data['status'] = TRUE;			}else{			$data['ve_search_list'] = false;			$data['status'] = FALSE;			}			//all ve for this bid			$other_all_ve_where = '';			$all_ve_where_array[] = array(								'field_name' => 'BID_RFI_VE.bid_id',								'value'=> $result['data']['ub_bid_id'], 								'type' => '='							);			$all_ve_where_array[] = array(								'field_name' => 'BID_RFI_VE.rfi_ve_type',								'value'=> 'VE', 								'type' => '='							);			if($this->user_account_type == SUBCONTRACTOR)			{							$other_all_ve_where = ' AND (BID_RFI_VE.assign_to_ids = '.$this->user_session['ub_user_id'].' || BID_RFI_VE.visible_to_subs = "Yes" || BID_RFI_VE.created_by = '.$this->user_id.') ';			}			$all_ve_where = $this->Mod_bid->build_where($all_ve_where_array);            if($other_all_ve_where != '')			{				$all_ve_where = $all_ve_where.$other_all_ve_where;			}			$all_ve = $this->Mod_bid->get_rfi_ve(array(									'select_fields' => array('COUNT(BID_RFI_VE.ub_bid_rfi_ve_id) AS all_ve'),									'where_clause' => $all_ve_where,								    ));			if(isset($all_ve['aaData']))			{				$data['all_ve'] = $all_ve['aaData'];			}else{			$data['all_ve'] = false;			}			//ve created by me			$ve_created_by_me = $this->Mod_bid->get_rfi_ve(array(									'select_fields' => array('COUNT(BID_RFI_VE.created_by) AS asked_by_me'),									'where_clause' => array('BID_RFI_VE.bid_id'=> $result['data']['ub_bid_id'], 'BID_RFI_VE.rfi_ve_type'=> 'VE','BID_RFI_VE.created_by' => $this->user_session['ub_user_id']),								    ));			if(isset($ve_created_by_me['aaData']))			{				$data['ve_created_by_me'] = $ve_created_by_me['aaData'];			}else{			$data['ve_created_by_me'] = false;			}			//ve assigned to me			$ve_asign_to_me = $this->Mod_bid->get_rfi_ve(array(									'select_fields' => array('COUNT(BID_RFI_VE.assign_to_ids) AS assigned_to_me'),									'where_clause' => array('BID_RFI_VE.bid_id'=> $result['data']['ub_bid_id'], 'BID_RFI_VE.rfi_ve_type'=> 'VE','BID_RFI_VE.assign_to_ids' => $this->user_session['ub_user_id']),								    ));			if(isset($ve_asign_to_me['aaData']))			{				$data['ve_asign_to_me'] = $ve_asign_to_me['aaData'];			}else{			$data['ve_asign_to_me'] = false;			}			//ve unanswered			$other_unaswered_where = '';			$all_unaswered_array[] = array(								'field_name' => 'BID_RFI_VE.bid_id',								'value'=> $result['data']['ub_bid_id'], 								'type' => '='							);			$all_unaswered_array[] = array(								'field_name' => 'BID_RFI_VE.rfi_ve_type',								'value'=> 'VE', 								'type' => '='							);			$all_unaswered_array[] = array(								'field_name' => 'BID_RFI_VE.answer',								'value'=> '', 								'type' => '='							);			if($this->user_account_type == SUBCONTRACTOR)			{							$other_unaswered_where = ' AND (BID_RFI_VE.assign_to_ids = '.$this->user_session['ub_user_id'].' || BID_RFI_VE.visible_to_subs = "Yes" || BID_RFI_VE.created_by = '.$this->user_id.') ';			}			$unaswered_where = $this->Mod_bid->build_where($all_unaswered_array);            if($other_unaswered_where != '')			{				$unaswered_where = $unaswered_where.$other_unaswered_where;			}			$ve_unanswered = $this->Mod_bid->get_rfi_ve(array(									'select_fields' => array('COUNT(BID_RFI_VE.answer) AS answer'),									'where_clause' => $unaswered_where,								    ));			if(isset($ve_unanswered['aaData']))			{				$data['ve_unanswered'] = $ve_unanswered['aaData'];			}else{			$data['ve_unanswered'] = false;			}		  }	  }	  $this->Mod_bid->response($data);	  	}	/** 	* Accept bid	* 	* @method: accept_bid 	* @access: public 	* @param:  ajax post array	* @return: array	* encoded url :c2lnbnVwL2luZgxf1V4Lw--	*/		public function accept_bid($ub_bid_request_id = 0,$ub_bid_id = 0)	{			//echo $bid_id;echo $ub_bid_request_id;		$data = array(				    'title'        => "BIDS",						    'content'      => 'content/bids/edit_bid',				    'drop_upload'  => 'drop_upload',				    'page_id'      => 'bids',				    'date_all'	   =>'date_all',					'ub_bid_id'    => $ub_bid_id				  	);							//get project id from task table // by satheesh kumar		if(empty($this->project_id) && $ub_bid_request_id > 0)		{		$where_args = array('ub_bid_request_id' => $ub_bid_request_id);		$project_id = $this->Mod_project->get_project_id(UB_BID_REQUEST,$where_args);		$this->project_id = $project_id['aaData'][0]['project_id'];		}		//end code for get project id				$get_folder_id = array('select_fields' => array('ub_doc_folder_id'),                               'where_clause' => (array('builder_id' =>  $this->user_session['builder_id'],'project_id' => $this->project_id,'ui_folder_name' => $this->module))                               );		$all_folder = $this->Mod_doc->get_folder_id($get_folder_id);		if (isset($all_folder['aaData']) && !empty($all_folder)) 		{				$data['folder_id'] = $all_folder['aaData']['0']['ub_doc_folder_id'];		}					if( $ub_bid_request_id > 0 )		{			//Get all comments list from ub_daily_log_comments table with the builder_id			$datetime_array = array('COMMENT.created_on'=>'comment_created_on');			$comments_list = $this->Mod_comment->get_comment(array(									'select_fields' => array('USER.account_type','COMMENT.comments','COMMENT.created_by','USER.first_name','COMMENT.show_owner','COMMENT.show_sub','COMMENT.created_on','COMMENT.ub_comments_id,'.$this->Mod_user->format_user_datetime($datetime_array)),									'join'=> array('user'=>'Yes','project'=>'Yes','builder'=>'Yes'),									'where_clause' => array('COMMENT.module_pk_id'=> $ub_bid_request_id,'COMMENT.module_name' => $this->module),									'order_clause' => 'COMMENT.ub_comments_id desc'													));			if(isset($comments_list['aaData']))			{				$data['comments_list'] = $comments_list['aaData'];			}else{			$data['comments_list'] = false;			}								$query_array=array('select_fields'=>array('BID_REQUEST.ub_bid_request_id',		'BID_REQUEST.bid_amount',		'BID.ub_bid_id',		),		'join'=>array('project'=>'Yes','checklist'=>'Yes','bid'=>'yes', 'sub' => ''),	    'where_clause' => array('BID_REQUEST.ub_bid_request_id'=> $ub_bid_request_id),        );		$results_data=$this->Mod_bid->get_bidrequest($query_array);					//Get Cost Code Data			$costcode_array = array('select_fields' => array(		                     'BID_COST_CODE.cost_code_id',							 'BID_COST_CODE.cost_code_description',                             'VARIANCE_CODE.cost_variance_code'),							 'join'=>array('variance_code'=>'Yes'),							 'where_clause' => array('BID_COST_CODE.bid_id'=> $results_data['aaData'][0]['ub_bid_id']),							 );								     $costcode_result = $this->Mod_bid->get_cost_variance_code($costcode_array);			 $results_data['variance'] = $costcode_result ;					 $data['results_data']  = $results_data;			 //print_r($results_data);exit;			// Get inserted data with help of id			 $date_array = array('BID.released_date' => 'released_date','BID_REQUEST.viewed_on'=>'viewed_on','BID_REQUEST.submitted'=>'submitted');			 $result_data = $this->Mod_bid->get_bidrequest(array(			'select_fields' => array('BID.status','BID.pricing_format','BID.ub_bid_id','BID.package_title','BID.project_id','PROJECT.project_name','BID_REQUEST.will_bid','BID.description','BID_REQUEST.bid_amount','BID_REQUEST.ub_bid_request_id','BID_REQUEST.bid_sub_status','BID_REQUEST.modified_by','BID_REQUEST.sub_contractor_id','BID_REQUEST.sub_notes,'.$this->Mod_user->format_user_datetime($date_array,"date")),			'join'=> array('bid'=>'Yes','project'=>'Yes','sub'=>'Yes'),			'where_clause' => (array('ub_bid_request_id' =>  $ub_bid_request_id))			));			$result_multiple_bid_data = $this->Mod_bid->get_bids(array(			'select_fields' => array('BID.allow_multi_bids'),			'where_clause' => (array('ub_bid_id' =>  $ub_bid_id))			));			$result_count_accept_bid = $this->Mod_bid->get_bidrequest(array(			'select_fields' => array('COUNT(BID_REQUEST.ub_bid_request_id) AS ub_bid_request_id'),			'where_clause' => (array('bid_id' =>  $ub_bid_id,'bid_sub_status' => 'Accepted'))			));			$data['multiple_bids'] = $result_multiple_bid_data['aaData'][0];			$data['number_of_accepted_bid'] = $result_count_accept_bid['aaData'][0];			//echo "<pre>";print_r($result_multiple_bid_data);			//echo "<pre>";print_r($result_count_accept_bid);exit;			if(TRUE === $result_data['status'])			{				$data['bid_request_data']  = $result_data['aaData'][0];			}			$ub_bid_id = $result_data['aaData'][0]['ub_bid_id'];			$modified_by = $result_data['aaData'][0]['modified_by'];			$costcode_array = array('select_fields' => array(                  'VARIANCE_CODE.cost_variance_code','SUB_COSTCODE.bid_amount','SUB_COSTCODE.created_by','SUB_COSTCODE.cost_code_description'),            'join'=>array('variance_code'=>'Yes'),                             'where_clause' => array('SUB_COSTCODE.bid_request_id'=> $ub_bid_request_id),                             );         $costcode_result = $this->Mod_bid->get_sub_cost_code_val($costcode_array);         //print_r($costcode_result);          $data['variance'] = $costcode_result ;         //Fetching the last po is realeased or not to hide/show the reject button         $po_status = $this->Mod_po_co->get_po_co(array(			'select_fields' => array('PO_CO.po_status'),			'where_clause' => (array('PO_CO.bid_po_id' =>  $ub_bid_request_id,'PO_CO.type' => 'PO'))			));         //print_r($po_status);exit;         if($po_status['status'] == TRUE)         {         	$data['po_status_result'] = $po_status['aaData'][0];         }         /*else         {         	$data['po_status_result'] = 'In Progress';         }*/			                   		}			$this->template->view($data);	}	/** 	* update_bid_status	* 	* @method: update_bid_status 	* @access: public 	* @param:  ajax post array	* @return: array	* encoded url :c2lnbnVwL2luZgxf1V4Lw--	*/		public function update_bid_status()	{			if(!empty($this->input->post()))        {            // Sanitize input         $result = $this->sanitize_input();         //print_r($result);         if(TRUE == $result['status'])         {         	/*$bid_request_update_array = array(         		'ub_bid_request_id' => $result['data']['ub_bid_request_id'],				'bid_sub_status' => $result['data']['bid_sub_status'],			  	);*/         	//print_r($bid_request_update_array);exit;         	$response = $this->Mod_bid->update_bid_status($result['data']);         	$this->Mod_bid->response($response);         }       }	}	public function get_bid_requests(){				if(!empty($this->project_id))		{			$post_array[] = array(							'field_name' => 'BID_REQUEST.project_id',							'value'=> $this->project_id, 							'type' => '='						);		}		else		{			$post_array[] = array(							'field_name' => 'BID_REQUEST.project_id',							'value'=> $this->users_project_ids, 							'type' => '||',							'classification' => 'primary_ids'						);		}	       $post_array[] = array(        'field_name' => 'BID_REQUEST.builder_id',        'value'=> $this->user_session['builder_id'],        'type' => '='        );       $post_array[] = array(							  'field_name' => 'BID_REQUEST.is_delete',							  'value'=> 'No', 							  'type' => '='							);	        $post_array[] = array(        'field_name' => 'BID_REQUEST.sub_contractor_id',        'value'=> $this->user_session['subcontractor_id'],        'type' => '='        );		 // $post_array[] = array(		// 'field_name' => 'BID.status',		// 'value' => 'Released',		// 'type' => '='		// );		 $other_where = '';				        if(!empty($this->input->post()))        {            // Sanitize input            $result = $this->sanitize_input();         if(TRUE == $result['status'])        {        $search_session_array = array();            // echo '<pre>';print_r($result['data']);exit;              if(isset($result['data']['bid_package_status']) && $result['data']['bid_package_status']!='' && $result['data']['bid_package_status'] != 'null')						 {						$post_array[] = array(								'field_name' => 'BID.status',								'value'=> $result['data']['bid_package_status'], 								'type' => '='							);					 $search_session_array['bid_package_status'] = $result['data']['bid_package_status'];			 }			  if(isset($result['data']['bid_status']) && $result['data']['bid_status']!='' && $result['data']['bid_status'] != 'null')						 {						$post_array[] = array(								'field_name' => 'BID_REQUEST.bid_sub_status',								'value'=>  $result['data']['bid_status'], 								'type' => '='							);					 $search_session_array['bid_status'] = $result['data']['bid_status'];			  }			   else			 {				$other_where = '  AND (BID_REQUEST.bid_sub_status = "Declined" OR BID_REQUEST.bid_sub_status = "Accepted" OR BID_REQUEST.bid_sub_status = "Submitted" OR BID_REQUEST.bid_sub_status = "Released")'; 			 }			  if(isset($result['data']['daterange']) && $result['data']['daterange']!='')				{										$formatted_date = explode(" ",$result['data']['daterange']);					 $post_array[] = array(										'field_name' => 'BID.released_date',										'from'=> date("Y-m-d", strtotime($formatted_date[0])),										'to'=> date("Y-m-d", strtotime($formatted_date[2])),										'type' => 'daterange'									      );   						$search_session_array['daterange'] = $result['data']['daterange'];				}				/*					Paggination length stored in seesion code start here				*/				$search_session_array['iDisplayStart'] = $result['data']['iDisplayStart'];				$search_session_array['iDisplayLength'] = $result['data']['iDisplayLength'];                 // Setting session				$this->module = 'BIDREQUEST';				 // print_r($this->session->all_userdata());                $this->uni_set_session('search', $search_session_array);				// Where clause argument				$where_str = $this->Mod_bid->build_where($post_array);				 if($other_where != '')				{					$where_str = $where_str.$other_where;				} 				// echo '<pre>';print_r($where_str);				// Pagination Array			$pagination_array=array();			if(isset($result['data']['iDisplayStart'])&&isset($result['data']['iDisplayLength'])&&isset($result['data']['sEcho']))			{			$pagination_array=array('iDisplayStart'=>$result['data']['iDisplayStart'],'iDisplayLength'=>$result['data']['iDisplayLength'],'sEcho'=>$result['data']['sEcho']);			$total_count_array=$this->Mod_bid->get_bidrequest(array(			'select_fields'=>array('COUNT(BID_REQUEST.ub_bid_request_id) AS total_count'),                                    'where_clause'=> $where_str,                                     'join'=>array('builder'=>'','project'=>'','bid'=>'yes', 'sub' => ''),                                    ));			}        $order_by_where='';        // echo '<pre>';print_r($result);exit;        if(isset($result['data']['iSortCol_0']) && $result['data']['iSortCol_0'] >  0)        {                $sort_type=$result['data']['sSortDir_0'];                $sort_filed_column_id=$result['data']['iSortCol_0'];                $dt_filed_name='mDataProp_';                // Get formatted sort name				$format_sort_name = $this->Mod_bid->get_formatted_sort_name(array('module_name' => $this->module, 'filed_name' => $result['data'][$dt_filed_name.$sort_filed_column_id]));				if($format_sort_name != '')				{						$order_by_where = $format_sort_name.' '.$sort_type;				}				else				{                 $order_by_where='BID.'.$result['data'][$dt_filed_name.$sort_filed_column_id].' '.$sort_type;                }        }		else		{		$order_by_where = 'BID.modified_on DESC';		}      }        else         {         $this->Mod_bid->response($result);         }    }    // echo '<pre>';print_r($result['data'][$dt_filed_name.$sort_filed_column_id]);exit;	$bid_released_date_array = array('BID.released_date'=>'released_date');	$bid_deadline_date_array = array('BID.due_date_time'=>'due_time');	$query_array=array('select_fields'=>array('BID.ub_bid_id','BID.package_title,'.$this->Mod_user->format_user_datetime($bid_released_date_array,"date").','.$this->Mod_user->format_user_datetime($bid_deadline_date_array,"date").',BID_REQUEST.will_bid','PROJECT.project_name','BID_REQUEST.bid_amount','BID_REQUEST.bid_sub_status','BID_REQUEST.ub_bid_request_id'),	'join'=>array('builder'=>'Yes','project'=>'Yes','bid'=>'yes', 'sub' => ''),            'where_clause' => $where_str,            'order_clause' => $order_by_where,            'pagination'   =>$pagination_array              );$result_data=$this->Mod_bid->get_bidrequest($query_array);                  if($result_data['status']==FALSE)                  {                  $result_data=array();                  $result_data['aaData']=array();                  }                  else                  {                  $result_data['iTotalRecords'] = isset($total_count_array['aaData'][0]['total_count'])?$total_count_array['aaData'][0]['total_count']:'';$result_data['iTotalDisplayRecords']=isset($total_count_array['aaData'][0]['total_count'])?$total_count_array['aaData'][0]['total_count']:'';                  $result_data['sEcho'] = isset($result['data']['sEcho'])?$result['data']['sEcho']:'';                  }    // Response data     $this->Mod_bid->response($result_data);     } 	 	 /** 	* Destroy Bidrequest	* 	* @method: bidrequest_destroy_session	* @access: public 	* @param:  ajax post array	* @return: array 	* url: bgxf19ncy9kZWxldgxf1Vfbgxf19nLw--	*/	public function bidrequest_destroy_session()	{		$this->module = 'BIDREQUEST';		if(!empty($this->input->post()))		{			// Sanitize input			$result = $this->sanitize_input();			// echo "<pre>";print_r($result);exit;			if(TRUE === $result['status'])			{			// echo "<pre>";print_r($result);exit;				$result = $this->Mod_bid->destroy_session($result['data']);			}			$this->Mod_bid->response($result);		}		else		{			$response['status'] = FALSE;			$response['message'] = 'Delete Failed: Post array is empty';		}	}		/** 	* Apply Saved Search	* 	* @method: apply_saved_search 	* @access: public 	* @params: 	* @return: array 	* @created by: Gayathri kalyani 	* @created on: 03/04/2015 	* url encoded : 	*/	public function bidrequest_apply_saved_search()	{		 $this->module = 'BIDREQUEST';		/* Apply Filter code starts here */		 $post_array = array( 'builder_id' => $this->user_session['builder_id'],							    'user_id' => $this->user_session['ub_user_id'],							    'module_name' => $this->module		                      );							 		 $result_data = $this->Mod_saved_search->get_saved_search(array(												 'select_fields' => array(),												 'where_clause' => $post_array												 ));	  // echo '<pre>';print_r($result_data);								 		if(!empty($this->input->post()))		{			if($result_data['status'] == true)			{				$save_search_id = $result_data['aaData'][0]['ub_saved_search_id'];				$task_array = $this->input->post();				$post_array = array(					'ub_saved_search_id' => $save_search_id,					'search_params' => "'".serialize($task_array)."'"				    );				$response = $this->Mod_saved_search->update_saved_search($post_array);				$this->Mod_saved_search->response($response);			}						else			{				$task_array = $this->input->post();				$post_array = array(					'search_params' => "'".serialize($task_array)."'"				);				$response = $this->Mod_saved_search->update_saved_search($post_array);				$this->Mod_saved_search->response($response);			}		}				else	{		 $serialized_data = $result_data['aaData'][0]['search_params'];		  // echo '<pre>';print_r($result_data);exit;		 $remove_single_quote = str_replace("'", '', $serialized_data);		 $unserialized_data = unserialize($remove_single_quote);		 $result_data['aaData'][0]['search_params'] = $unserialized_data;		 if(!empty($unserialized_data))		{				if(!empty($unserialized_data['bid_package_status']))				{					// Set value in session					$search_session_array['bid_package_status'] = $unserialized_data['bid_package_status'];				}				if(!empty($unserialized_data['bid_status']))				{					// Set value in session					$search_session_array['bid_status'] = $unserialized_data['bid_status'];				}				if(!empty($unserialized_data['daterange']))				{					// Set value in session					$search_session_array['daterange'] = $unserialized_data['daterange'];				}								// Setting session 				$this->module = 'BIDREQUEST';				 $this->uni_set_session('search', $search_session_array);								// Response data				$this->Mod_bid->response($result_data);		}	}	// echo '<pre>';print_r($result_data);}     /** 	* Add comment	* 	* @method: new_comment 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: sidhartha	* @URL: bgxf19ncy9zYXZlX2NvbW1lbnQv 	*/		public function save_comment()	{		//print_r($post_data);exit;		if(!empty($this->input->post()))		{			$result = $this->sanitize_input();			if(TRUE === $result['status'])			{					//print_r($result);exit;				$post_data = array(					'comments' => $result['data']['comments'],					'project_id' => $result['data']['project_id'],					'module_pk_id' => $result['data']['ub_bid_request_id'],					'builder_id' => $this->user_session['builder_id'],					'created_on' => TODAY,					'created_by' => $this->user_session['ub_user_id'],					'modified_on' => TODAY,					'modified_by' => $this->user_session['ub_user_id'],					'module_name' => $this->module					);				if($this->user_session['account_type'] == BUILDERADMIN){				$notification_data = array(                    'sub_contractor_id' => $result['data']['sub_contractor_id'],					'show_child' => isset($result['data']['sub_child']) ? "Yes" : "No",					'bid_id' => $result['data']['bid_id'],					'project_name' => $result['data']['project_name'],					'package_name' => $result['data']['package_name'],					);}				else{$notification_data = array();}				//print_r($post_data);exit;				$response = $this->Mod_comment->add_comment($post_data,$notification_data);				$this->Mod_comment->response($response);				}						}	}			/** 	* Delete comment	* 	* @method: delete_comment 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: Sidharta	* @URL: bgxf19ncy9kZWxldgxf1VfY29tbWVudC8- 	*/	public function delete_comment()	{				$result = $this->sanitize_input();			if(TRUE === $result['status'])			{				// Delete functionality				$response = $this->Mod_comment->delete_comment($result['data']);							}			else			{				$this->Mod_comment->response($result);			}			$this->Mod_comment->response($response);	}	/** 	* Delete bid	* 	* @method: delete_log 	* @access: public 	* @param:  ajax post array	* @return: array 	* url: bgxf19ncy9kZWxldgxf1Vfbgxf19nLw--	*/	public function delete_bid()	{				if(!empty($this->input->post()))		{			// Sanitize input			$result = $this->sanitize_input();			if(TRUE === $result['status'])			{				// Delete functionality				$response = $this->Mod_bid->delete_bids($result['data']);				$respoce_array = $this->get_bids($page_count = 'result_array');				//echo '<pre>';print_r($respoce_array);exit;				if($respoce_array['status'] == FALSE)				{					if(isset($this->uni_session_get('SEARCH')['iDisplayStart']) && $this->uni_session_get('SEARCH')['iDisplayStart'] > 0)					{						$search_session_array['iDisplayStart'] = (($this->uni_session_get('SEARCH')['iDisplayStart']) - ($this->uni_session_get('SEARCH')['iDisplayLength']));				        $search_session_array['iDisplayLength'] = $this->uni_session_get('SEARCH')['iDisplayLength'];				        $this->uni_set_session('search', $search_session_array);					}				}				/*$search_session_array['iDisplayStart'] = 0;				$this->uni_set_session('search', $search_session_array);*/			}			else			{				$this->Mod_bid->response($result);			}		}		else		{			$response['status'] = FALSE;			$response['message'] = 'Delete Failed: Post array is empty';		}		//Response data		$this->Mod_bid->response($response);	}	/** 	* Delete Bid Request	* 	* @method: delete_bid_request 	* @access: public 	* @param:  ajax post array	* @return: array 	* url: bgxf19ncy9kZWxldgxf1Vfbgxf19nLw--	*/		public function delete_bid_request()	{				if(!empty($this->input->post()))		{			// Sanitize input			$result = $this->sanitize_input();			if(TRUE === $result['status'])			{				// Delete functionality				$response = $this->Mod_bid->delete_bid_request($result['data']);			}			else			{				$this->Mod_bid->response($result);			}		}		else		{			$response['status'] = FALSE;			$response['message'] = 'Delete Failed: Post array is empty';		}		//Response data		$this->Mod_bid->response($response);	}	/** 	* Delete Rfi Ve	* 	* @method: delete_rfi_ve 	* @access: public 	* @param:  ajax post array	* @return: array 	* @createdby: Sidharta	* @URL: bgxf19ncy9kZWxldgxf1VfY29tbWVudC8- 	*/	public function delete_rfi_ve()	{				$result = $this->sanitize_input();		//print_r($result);exit;		if(TRUE === $result['status'])		{			// Delete functionality			$delete_array = array('ub_bid_rfi_ve_id' => $result['data']['ub_bid_rfi_ve_id']);			$response = $this->Mod_bid->delete_rfi_ve($delete_array);					}		else		{			$this->Mod_bid->response($result);		}		$this->Mod_bid->response($response);	}		//import selections from template	public function import_bids()	{		//Insert in UB_CHECKLIST table		$result = $this->sanitize_input();		  $template_checklist_info = $this->Mod_template->get_template_checklist(array(							'select_fields' => array('*'),							'where_clause' => array('template_id' => $result['data']['template_id'])							));		  if($template_checklist_info['status'] == TRUE)		  {		   $checklist_data = $template_checklist_info['aaData'];		   foreach ($checklist_data as $check_key => $check_value) {		 	$check_value['project_id'] = $this->project_id;		 	$check_value['created_on'] = TODAY;		 	$check_value['modified_on'] = TODAY;		 	$check_value['created_by'] = $this->user_session['ub_user_id'];		 	$check_value['modified_by'] = $this->user_session['ub_user_id'];		    unset($check_value['ub_template_checklist_id']);		    unset($check_value['template_id']);			$this->Mod_checklist->add_check_list($check_value);			  }	     } 		$template_bid_info = $this->Mod_template->get_template_bid(array(							'select_fields' => array('*'),							'where_clause' => array('template_id' => $result['data']['template_id'])							));		//print_r($template_bid_info);exit;		if($template_bid_info['status'] == TRUE)		{		 $bid_data = $template_bid_info['aaData'];		 foreach ($bid_data as $key => $value) {		 	$bid_id = $value['bid_id'];		 	$ub_template_bid_id = $value['ub_template_bid_id'];		 	$value['project_id'] = $this->project_id;		 	$value['created_on'] = TODAY;		 	$value['modified_on'] = TODAY;		 	$value['created_by'] = $this->user_session['ub_user_id'];		 	$value['modified_by'] = $this->user_session['ub_user_id'];		    unset($value['ub_template_bid_id']);		    unset($value['bid_id']);		    unset($value['due_date_time']);		    unset($value['due_date']);		    unset($value['due_time']);		    unset($value['template_id']);		    unset($value['checklist_id']);		    unset($value['released_date']);			$bid_response = $this->Mod_bid->add_bid($value);										$template_bid_cost_code_info = $this->Mod_template->get_template_bid_cost_code(array(							'select_fields' => array('*'),							'where_clause' => array('template_id' => $result['data']['template_id'],'template_bid_id' => $ub_template_bid_id)							));								      if($template_bid_cost_code_info['status'] == TRUE)		      {		        $bid_cost_code_data = $template_bid_cost_code_info['aaData'];		        foreach ($bid_cost_code_data as $keys => $values) {		 	    $values['project_id'] = $this->project_id;		 	    $values['bid_id'] = $bid_response['insert_id'];		 	    $values['created_on'] = TODAY;		 	    $values['modified_on'] = TODAY;		 	    $values['created_by'] = $this->user_session['ub_user_id'];		 	    $values['modified_by'] = $this->user_session['ub_user_id'];		        unset($values['ub_template_bid_cost_code_id']);		        unset($values['template_id']);		        unset($values['template_bid_id']);			    $this->Mod_bid->add_bid_cost_code($values);					      }	         }	        }		   	      }		$this->Mod_bid->response($template_bid_info);	}    public function save_bids_intrest()	{		$result = $this->sanitize_input();		 				if(TRUE == $result['status'])		{		 	    $post_array['will_bid'] = $result['data']['interest'] ;				$post_array['ub_bid_request_id'] = $result['data']['ub_bid_request_id'] ;				$post_array['modified_on'] = TODAY;                $post_array['modified_by'] = $this->user_session['ub_user_id'];				$response_bid = $this->Mod_bid->update_will_bid($post_array);		       if (TRUE === $response_bid['status']) 						{														$response['status'] = TRUE;							$response['message'] = 'updated successfully';						}						else						{							$response['status'] = FALSE;							$response['message'] = 'update failed';						}						$this->Mod_user->response($response);				}	}	/** 	* get_schedule_date	* 	* @method: get_schedule_date 	* @access: public 	* @param:  	* @return: array 	* @url: 	*/	public function get_schedule_date()	{		$result = $this->sanitize_input();				//New		$result_schedule = $this->Mod_schedule->get_schedules(array(								'select_fields' => array('SCHEDULE.start_date','SCHEDULE.end_date'),								'where_clause' => array('SCHEDULE.ub_schedule_id' => $result['data']['schedule_id'])								));			//print_r($result_schedule);		if($result['data']['before_or_after'] == 'After')		{			            $result['data']['number_days'] = $result['data']['number_days'];		}		if($result['data']['before_or_after'] == 'Before')		{            $result['data']['number_days'] = '-'.$result['data']['number_days'];            $result_schedule['aaData'][0]['end_date'] = $result_schedule['aaData'][0]['start_date'];		}		$schedule_array = array(			'builder_id' => $this->builder_id,			'project_id' => $result['data']['project_id'],			'start_date' => $result_schedule['aaData'][0]['end_date'],			'no_of_days' => $result['data']['number_days']			);		$results = $this->Mod_schedule->get_end_date($schedule_array);		$data['end_date'] = $results['end_date'];		$this->Mod_bid->response($data);		//print_r($results);exit;									}	/** 	* close bid	* 	* @method: close_bid 	* @access: public 	* @param:  	* @return: array 	* @url: 	*/	public function close_bid()	{		$result = $this->sanitize_input();		//print_r($result);		$status_update_array = array(		    	'ub_bid_id' => $result['data']['ub_bid_id'],		    	'status' => $result['data']['status'],		    	);		$response = $this->Mod_bid->update_bid($status_update_array);		if(TRUE == $response['status'] && $result['data']['status'] == 'Closed')	    {						  if(isset($result['data']['sub_contractor_id']) && $result['data']['sub_contractor_id'] !== null && $result['data']['sub_contractor_id']!='Nothing selected'){ 		  $request_table_insert_array = array(			'builder_id' => $this->user_session['builder_id'],			'project_id' =>  $result['data']['project_id'],			'sub_contractor_id' => $result['data']['sub_contractor_id'],			'due_date_time' => $result['data']['due_date'] . ' ' . $result['data']['due_time'],			'reminder_id' => $result['data']['daily_sub_reminder'],			'module_name' => $this->module,			'bid_id' => $result['data']['ub_bid_id'],			'bid_sub_status' => $result['data']['status'],			'sub_viewed' => 'No',			'created_by' => $this->user_session['ub_user_id'],			'created_on' => TODAY,			'modified_by' => $this->user_session['ub_user_id'],             'modified_on' => TODAY,);		  //print_r($request_table_insert_array);exit;			$response_request_table = $this->Mod_bid->add_request($request_table_insert_array);		}		else		{			$request_table_delete_array = array(		    'bid_id' => $result['data']['ub_bid_id'],		    );			$response_request_table = $this->Mod_bid->delete_all_request($request_table_delete_array);		}	  }	  else	  {		$request_table_delete_array = array(	    'bid_id' => $result['data']['ub_bid_id'],	    );		$response_request_table = $this->Mod_bid->delete_all_request($request_table_delete_array);	  }		$this->Mod_bid->response($response);	}}